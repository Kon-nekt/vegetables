{
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const mongodb = require('./mongodb');\n\nrequire('./nodemailer');\n\nglobal.mongodb = mongodb;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvZGIiLCJyZXF1aXJlIiwiZ2xvYmFsIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBQSxPQUFPLENBQUMsY0FBRCxDQUFQOztBQUVBQyxNQUFNLENBQUNGLE9BQVAsR0FBaUJBLE9BQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQUhEUllXQVxcRGVza3RvcFxcdmVnZXRhYmxlcy1tYXN0ZXJcXGJhY2tlbmRcXHN5c3RlbXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvZGIgPSByZXF1aXJlKCcuL21vbmdvZGInKTtcclxucmVxdWlyZSgnLi9ub2RlbWFpbGVyJyk7XHJcblxyXG5nbG9iYWwubW9uZ29kYiA9IG1vbmdvZGI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongodb",
        "require",
        "global"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACAA,OAAO,CAAC,cAAD,CAAP;;AAEAC,MAAM,CAACF,OAAP,GAAiBA,OAAjB",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "sourcesContent": [
        "const mongodb = require('./mongodb');\r\nrequire('./nodemailer');\r\n\r\nglobal.mongodb = mongodb;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1585418711504
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\mongodb.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\mongodb.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\mongodb.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\mongodb.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
        "sourceFileName": "mongodb.js"
      }
    },
    "ast": null,
    "code": "const assert = require('assert');\n\nconst mongodb = require('mongodb');\n\nconst EventEmitter = require('events');\n\nconst config = require('../config.json').mongodb;\n\nconst events = new EventEmitter();\nconst tags = {\n  client: 'MongoDB::client',\n  db: 'MongoDB::db'\n};\nevents.on('created', () => console.log(`${tags.client} created`));\nevents.on('connected', () => console.log(`${tags.db} connected`));\nlet client;\nlet db; // eslint-disable-next-line func-names\n\n(async function () {\n  // eslint-disable-next-line no-undef\n  const {\n    connection,\n    options\n  } = config;\n  const {\n    host,\n    port,\n    source,\n    database,\n    username,\n    password\n  } = connection;\n  client = await mongodb.MongoClient.connect(`mongodb://${username}:${password}@${host}:${port}/?authSource=${source}`, options);\n  events.emit('created');\n  db = client.db(database);\n  assert.strictEqual(typeof client, 'object');\n  assert.strictEqual(typeof db, 'object');\n  assert.strictEqual(client.isConnected(), true);\n  events.emit('connected');\n  db.on('close', error => console.log(`${tags.db} close`, error));\n  db.on('error', error => console.log(`${tags.db} error`, error));\n  db.on('fullsetup', () => console.log(`${tags.db} fullsetup`));\n  db.on('parseError', error => console.log(`${tags.db} parseError`, error));\n  db.on('reconnect', () => console.log(`${tags.db} reconnect`));\n  db.on('timeout', error => console.log(`${tags.db} timeout`, error));\n})().catch(exception => {\n  console.log(exception);\n  process.exit(1);\n});\nmodule.exports = {\n  events,\n\n  /**\r\n   * Преобразовывает строку в ObjectID.\r\n   * @param {string} value\r\n   * @return {ObjectId}\r\n   */\n  id: value => {\n    assert.strictEqual(typeof value, 'string');\n    assert.strictEqual(mongodb.ObjectId.isValid(value), true);\n    const result = new mongodb.ObjectId(value);\n    assert.strictEqual(typeof result, 'object');\n    return result;\n  },\n\n  /**\r\n   * Создает новую коллекцию.\r\n   * @param {string} value\r\n   * @return {Promise}\r\n   */\n  createCollection: value => new Promise((resolve, reject) => {\n    setTimeout(async () => {\n      try {\n        assert.strictEqual(typeof value, 'string');\n        assert.strictEqual(client.isConnected(), true);\n        const response = await db.createCollection(value);\n        resolve(response);\n      } catch (exception) {\n        reject(exception);\n      }\n    }, 0);\n  }),\n\n  /**\r\n   * Создает новый индекс.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @param {object} options\r\n   * @return {Promise}\r\n   */\n  createIndex: (collection, query, options = {}) => new Promise((resolve, reject) => {\n    setTimeout(async () => {\n      try {\n        assert.strictEqual(typeof collection, 'string');\n        assert.strictEqual(typeof query, 'object');\n        assert.strictEqual(typeof options, 'object');\n        assert.strictEqual(client.isConnected(), true);\n        const response = await db.collection(collection).createIndex(query, options);\n        resolve(response);\n      } catch (exception) {\n        reject(exception);\n      }\n    }, 0);\n  }),\n\n  /**\r\n   * Выполняет агрегацию.\r\n   * @param {string} collection\r\n   * @param {Array} pipeline\r\n   * @param {object} options\r\n   * @return {Promise}\r\n   */\n  aggregate: (collection, pipeline, options = {}) => new Promise((resolve, reject) => {\n    setTimeout(async () => {\n      try {\n        assert.strictEqual(typeof collection, 'string');\n        assert.strictEqual(Array.isArray(pipeline), true);\n        assert.strictEqual(typeof options, 'object'); // console.log(pipeline);\n\n        assert.strictEqual(client.isConnected(), true); // https://docs.mongodb.com/manual/reference/method/db.collection.aggregate/\n        // https://mongodb.github.io/node-mongodb-native/2.0/tutorials/aggregation/\n        // http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#aggregate\n        // https://docs.mongodb.com/v4.0/reference/operator/aggregation-pipeline/\n        // https://docs.mongodb.com/v4.0/reference/operator/aggregation/\n        // https://docs.mongodb.com/v4.0/reference/command/aggregate/\n        // https://docs.mongodb.com/manual/core/aggregation-pipeline-limits/#memory-restrictions\n        // Этапы конвейера имеют ограничение в 100 мегабайт оперативной памяти. Если этап превышает этот предел, MongoDB выдаст ошибку. Чтобы разрешить обработку больших наборов данных, используйте параметр allowDiskUse, чтобы разрешить этапам конвейера агрегации записывать данные во временные файлы.\n\n        const response = await db.collection(collection).aggregate(pipeline, options).toArray();\n        resolve(response);\n      } catch (exception) {\n        reject(exception);\n      }\n    }, 0);\n  }),\n\n  /**\r\n   * Выполняет единичный поиск.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @return {Promise}\r\n   */\n  findOne: (collection, query) => new Promise((resolve, reject) => {\n    setTimeout(async () => {\n      try {\n        assert.strictEqual(typeof collection, 'string');\n        assert.strictEqual(typeof query, 'object');\n        assert.strictEqual(client.isConnected(), true);\n        const response = await db.collection(collection).findOne(query);\n        resolve(response);\n      } catch (exception) {\n        reject(exception);\n      }\n    }, 0);\n  }),\n\n  /**\r\n   * Выполняет множественный поиск.\r\n   * @param {string} collection\r\n   * @return {Promise}\r\n   */\n  getAll: collection => new Promise(async (resolve, reject) => {\n    try {\n      assert.strictEqual(typeof collection, 'string');\n      assert.strictEqual(client.isConnected(), true);\n      const response = await db.collection(collection).find().toArray();\n      resolve(response);\n    } catch (exception) {\n      reject(exception);\n    }\n  }),\n\n  /**\r\n   * Выполняет единичную вставку.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @return {Promise}\r\n   */\n  insertOne: (collection, query) => new Promise((resolve, reject) => {\n    setTimeout(async () => {\n      try {\n        assert.strictEqual(typeof collection, 'string');\n        assert.strictEqual(typeof query, 'object');\n        assert.strictEqual(client.isConnected(), true);\n        const response = await db.collection(collection).insertOne(query);\n        resolve(response);\n      } catch (exception) {\n        reject(exception);\n      }\n    }, 0);\n  }),\n\n  /**\r\n   * Выполняет массовую вставку.\r\n   * @param {string} collection\r\n   * @param {Array} query\r\n   * @return {Promise}\r\n   */\n  insertMany: (collection, query) => new Promise((resolve, reject) => {\n    setTimeout(async () => {\n      try {\n        assert.strictEqual(typeof collection, 'string');\n        assert.strictEqual(typeof query, 'object');\n        assert.strictEqual(Array.isArray(query), true);\n        assert.strictEqual(client.isConnected(), true); // https://docs.mongodb.com/v4.0/reference/method/db.collection.insertMany/\n\n        const response = await db.collection(collection).insertMany(query);\n        resolve(response);\n      } catch (exception) {\n        reject(exception);\n      }\n    }, 0);\n  }),\n\n  /**\r\n   * Выполняет единичное обновление.\r\n   * @param {string} collection\r\n   * @param {object} filter\r\n   * @param {object} update\r\n   * @param {object} options\r\n   * @return {Promise}\r\n   */\n  updateOne: (collection, filter, update, options = {}) => new Promise((resolve, reject) => {\n    setTimeout(async () => {\n      try {\n        assert.strictEqual(typeof collection, 'string');\n        assert.strictEqual(typeof filter, 'object');\n        assert.strictEqual(typeof update, 'object');\n        assert.strictEqual(typeof options, 'object');\n        assert.strictEqual(client.isConnected(), true);\n        const response = await db.collection(collection).updateOne(filter, update, options);\n        resolve(response);\n      } catch (exception) {\n        reject(exception);\n      }\n    }, 0);\n  }),\n\n  /**\r\n  * Выполняет множественное обновление.\r\n  * @param {string} collection\r\n  * @param {object} filter\r\n  * @param {object} update\r\n  * @param {object} options\r\n  * @return {Promise}\r\n  */\n  updateMany: (collection, filter, update, options = {}) => new Promise((resolve, reject) => {\n    setTimeout(async () => {\n      try {\n        assert.strictEqual(typeof collection, 'string');\n        assert.strictEqual(typeof filter, 'object');\n        assert.strictEqual(typeof update, 'object');\n        assert.strictEqual(typeof options, 'object');\n        assert.strictEqual(client.isConnected(), true);\n        const response = await db.collection(collection).updateMany(filter, update, options);\n        resolve(response);\n      } catch (exception) {\n        reject(exception);\n      }\n    }, 0);\n  }),\n\n  /**\r\n   * Выполняет единичное удаление.\r\n   * @param {string} collection\r\n   * @param {object} filter\r\n   * @return {Promise}\r\n   */\n  deleteOne: (collection, filter) => new Promise((resolve, reject) => {\n    setTimeout(async () => {\n      try {\n        assert.strictEqual(typeof collection, 'string');\n        assert.strictEqual(typeof filter, 'object');\n        assert.strictEqual(client.isConnected(), true);\n        const response = await db.collection(collection).deleteOne(filter);\n        resolve(response);\n      } catch (exception) {\n        reject(exception);\n      }\n    }, 0);\n  }),\n\n  /**\r\n   * Выполняет массовое удаление.\r\n   * @param {string} collection\r\n   * @param {object} filter\r\n   * @return {Promise}\r\n   */\n  deleteMany: (collection, filter) => new Promise((resolve, reject) => {\n    setTimeout(async () => {\n      try {\n        assert.strictEqual(typeof collection, 'string');\n        assert.strictEqual(typeof filter, 'object');\n        assert.strictEqual(client.isConnected(), true);\n        const response = await db.collection(collection).deleteMany(filter);\n        resolve(response);\n      } catch (exception) {\n        reject(exception);\n      }\n    }, 0);\n  }),\n\n  /**\r\n   * Выполняет подсчет документов.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @return {Promise}\r\n   */\n  countDocuments: (collection, query) => new Promise((resolve, reject) => {\n    setTimeout(async () => {\n      try {\n        assert.strictEqual(typeof collection, 'string');\n        assert.strictEqual(typeof query, 'object');\n        assert.strictEqual(client.isConnected(), true);\n        const response = await db.collection(collection).countDocuments(query);\n        resolve(response);\n      } catch (exception) {\n        reject(exception);\n      }\n    }, 0);\n  })\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vbmdvZGIuanMiXSwibmFtZXMiOlsiYXNzZXJ0IiwicmVxdWlyZSIsIm1vbmdvZGIiLCJFdmVudEVtaXR0ZXIiLCJjb25maWciLCJldmVudHMiLCJ0YWdzIiwiY2xpZW50IiwiZGIiLCJvbiIsImNvbnNvbGUiLCJsb2ciLCJjb25uZWN0aW9uIiwib3B0aW9ucyIsImhvc3QiLCJwb3J0Iiwic291cmNlIiwiZGF0YWJhc2UiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiTW9uZ29DbGllbnQiLCJjb25uZWN0IiwiZW1pdCIsInN0cmljdEVxdWFsIiwiaXNDb25uZWN0ZWQiLCJlcnJvciIsImNhdGNoIiwiZXhjZXB0aW9uIiwicHJvY2VzcyIsImV4aXQiLCJtb2R1bGUiLCJleHBvcnRzIiwiaWQiLCJ2YWx1ZSIsIk9iamVjdElkIiwiaXNWYWxpZCIsInJlc3VsdCIsImNyZWF0ZUNvbGxlY3Rpb24iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInNldFRpbWVvdXQiLCJyZXNwb25zZSIsImNyZWF0ZUluZGV4IiwiY29sbGVjdGlvbiIsInF1ZXJ5IiwiYWdncmVnYXRlIiwicGlwZWxpbmUiLCJBcnJheSIsImlzQXJyYXkiLCJ0b0FycmF5IiwiZmluZE9uZSIsImdldEFsbCIsImZpbmQiLCJpbnNlcnRPbmUiLCJpbnNlcnRNYW55IiwidXBkYXRlT25lIiwiZmlsdGVyIiwidXBkYXRlIiwidXBkYXRlTWFueSIsImRlbGV0ZU9uZSIsImRlbGV0ZU1hbnkiLCJjb3VudERvY3VtZW50cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1FLFlBQVksR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBNUI7O0FBRUEsTUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsZ0JBQUQsQ0FBUCxDQUEwQkMsT0FBekM7O0FBRUEsTUFB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MEJpQixVQUExQixDQUFxQ0osTUFBckMsQ0FBdkI7QUFFQWxCLFFBQUFBLE9BQU8sQ0FBQ0csUUFBRCxDQUFQO0FBQ0gsT0FURCxDQVNFLE9BQU9mLFNBQVAsRUFBa0I7QUFDaEJhLFFBQUFBLE1BQU0sQ0FBQ2IsU0FBRCxDQUFOO0FBQ0g7QUFDSixLQWJTLEVBYVAsQ0FiTyxDQUFWO0FBY0gsR0FmbUMsQ0FyUnZCOztBQXNTYjs7Ozs7O0FBTUFtQyxFQUFBQSxjQUFjLEVBQUUsQ0FBQ2xCLFVBQUQsRUFBYUMsS0FBYixLQUF1QixJQUFJUCxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3BFQyxJQUFBQSxVQUFVLENBQUMsWUFBWTtBQUNuQixVQUFJO0FBQ0F6QyxRQUFBQSxNQUFNLENBQUN1QixXQUFQLENBQW1CLE9BQU9xQixVQUExQixFQUFzQyxRQUF0QztBQUNBNUMsUUFBQUEsTUFBTSxDQUFDdUIsV0FBUCxDQUFtQixPQUFPc0IsS0FBMUIsRUFBaUMsUUFBakM7QUFFQTdDLFFBQUFBLE1BQU0sQ0FBQ3VCLFdBQVAsQ0FBbUJoQixNQUFNLENBQUNpQixXQUFQLEVBQW5CLEVBQXlDLElBQXpDO0FBRUEsY0FBTWtCLFFBQVEsR0FBRyxNQUFNbEMsRUFBRSxDQUFDb0MsVUFBSCxDQUFjQSxVQUFkLEVBQTBCa0IsY0FBMUIsQ0FBeUNqQixLQUF6QyxDQUF2QjtBQUVBTixRQUFBQSxPQUFPLENBQUNHLFFBQUQsQ0FBUDtBQUNILE9BVEQsQ0FTRSxPQUFPZixTQUFQLEVBQWtCO0FBQ2hCYSxRQUFBQSxNQUFNLENBQUNiLFNBQUQsQ0FBTjtBQUNIO0FBQ0osS0FiUyxFQWFQLENBYk8sQ0FBVjtBQWNILEdBZnNDO0FBNVMxQixDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFIRFJZV0FcXERlc2t0b3BcXHZlZ2V0YWJsZXMtbWFzdGVyXFxiYWNrZW5kXFxzeXN0ZW1zXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcclxuY29uc3QgbW9uZ29kYiA9IHJlcXVpcmUoJ21vbmdvZGInKTtcclxuY29uc3QgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJyk7XHJcblxyXG5jb25zdCBjb25maWcgPSByZXF1aXJlKCcuLi9jb25maWcuanNvbicpLm1vbmdvZGI7XHJcblxyXG5jb25zdCBldmVudHMgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbmNvbnN0IHRhZ3MgPSB7IGNsaWVudDogJ01vbmdvREI6OmNsaWVudCcsIGRiOiAnTW9uZ29EQjo6ZGInIH07XHJcblxyXG5ldmVudHMub24oJ2NyZWF0ZWQnLCAoKSA9PiBjb25zb2xlLmxvZyhgJHt0YWdzLmNsaWVudH0gY3JlYXRlZGApKTtcclxuZXZlbnRzLm9uKCdjb25uZWN0ZWQnLCAoKSA9PiBjb25zb2xlLmxvZyhgJHt0YWdzLmRifSBjb25uZWN0ZWRgKSk7XHJcblxyXG5sZXQgY2xpZW50O1xyXG5sZXQgZGI7XHJcblxyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xyXG4oYXN5bmMgZnVuY3Rpb24gKCkge1xyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXHJcbiAgICBjb25zdCB7IGNvbm5lY3Rpb24sIG9wdGlvbnMgfSA9IGNvbmZpZztcclxuICAgIGNvbnN0IHsgaG9zdCwgcG9ydCwgc291cmNlLCBkYXRhYmFzZSwgdXNlcm5hbWUsIHBhc3N3b3JkIH0gPSBjb25uZWN0aW9uO1xyXG5cclxuICAgIGNsaWVudCA9IGF3YWl0IG1vbmdvZGIuTW9uZ29DbGllbnQuY29ubmVjdChgbW9uZ29kYjovLyR7dXNlcm5hbWV9OiR7cGFzc3dvcmR9QCR7aG9zdH06JHtwb3J0fS8/YXV0aFNvdXJjZT0ke3NvdXJjZX1gLCBvcHRpb25zKTtcclxuXHJcbiAgICBldmVudHMuZW1pdCgnY3JlYXRlZCcpO1xyXG5cclxuICAgIGRiID0gY2xpZW50LmRiKGRhdGFiYXNlKTtcclxuXHJcbiAgICBhc3NlcnQuc3RyaWN0RXF1YWwodHlwZW9mIGNsaWVudCwgJ29iamVjdCcpO1xyXG4gICAgYXNzZXJ0LnN0cmljdEVxdWFsKHR5cGVvZiBkYiwgJ29iamVjdCcpO1xyXG4gICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNsaWVudC5pc0Nvbm5lY3RlZCgpLCB0cnVlKTtcclxuXHJcblx0ZXZlbnRzLmVtaXQoJ2Nvbm5lY3RlZCcpO1xyXG5cclxuICAgIGRiLm9uKCdjbG9zZScsIGVycm9yID0+IGNvbnNvbGUubG9nKGAke3RhZ3MuZGJ9IGNsb3NlYCwgZXJyb3IpKTtcclxuICAgIGRiLm9uKCdlcnJvcicsIGVycm9yID0+IGNvbnNvbGUubG9nKGAke3RhZ3MuZGJ9IGVycm9yYCwgZXJyb3IpKTtcclxuICAgIGRiLm9uKCdmdWxsc2V0dXAnLCAoKSA9PiBjb25zb2xlLmxvZyhgJHt0YWdzLmRifSBmdWxsc2V0dXBgKSk7XHJcbiAgICBkYi5vbigncGFyc2VFcnJvcicsIGVycm9yID0+IGNvbnNvbGUubG9nKGAke3RhZ3MuZGJ9IHBhcnNlRXJyb3JgLCBlcnJvcikpO1xyXG5cdGRiLm9uKCdyZWNvbm5lY3QnLCAoKSA9PiBjb25zb2xlLmxvZyhgJHt0YWdzLmRifSByZWNvbm5lY3RgKSk7XHJcblx0ZGIub24oJ3RpbWVvdXQnLCBlcnJvciA9PiBjb25zb2xlLmxvZyhgJHt0YWdzLmRifSB0aW1lb3V0YCwgZXJyb3IpKTtcclxufSgpKS5jYXRjaChleGNlcHRpb24gPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXhjZXB0aW9uKTtcclxuICAgIHByb2Nlc3MuZXhpdCgxKTtcclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIGV2ZW50cyxcclxuXHJcbiAgICAvKipcclxuICAgICAqINCf0YDQtdC+0LHRgNCw0LfQvtCy0YvQstCw0LXRgiDRgdGC0YDQvtC60YMg0LIgT2JqZWN0SUQuXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcclxuICAgICAqIEByZXR1cm4ge09iamVjdElkfVxyXG4gICAgICovXHJcblx0aWQ6IHZhbHVlID0+IHtcclxuICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwodHlwZW9mIHZhbHVlLCAnc3RyaW5nJyk7XHJcbiAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKG1vbmdvZGIuT2JqZWN0SWQuaXNWYWxpZCh2YWx1ZSksIHRydWUpO1xyXG5cclxuICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgbW9uZ29kYi5PYmplY3RJZCh2YWx1ZSk7XHJcblxyXG4gICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2YgcmVzdWx0LCAnb2JqZWN0Jyk7XHJcblxyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog0KHQvtC30LTQsNC10YIg0L3QvtCy0YPRjiDQutC+0LvQu9C10LrRhtC40Y4uXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcclxuICAgICAqIEByZXR1cm4ge1Byb21pc2V9XHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZUNvbGxlY3Rpb246IHZhbHVlID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2YgdmFsdWUsICdzdHJpbmcnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2xpZW50LmlzQ29ubmVjdGVkKCksIHRydWUpO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZGIuY3JlYXRlQ29sbGVjdGlvbih2YWx1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KGV4Y2VwdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCAwKTtcclxuICAgIH0pLFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog0KHQvtC30LTQsNC10YIg0L3QvtCy0YvQuSDQuNC90LTQtdC60YEuXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvblxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IHF1ZXJ5XHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xyXG4gICAgICogQHJldHVybiB7UHJvbWlzZX1cclxuICAgICAqL1xyXG4gICAgY3JlYXRlSW5kZXg6IChjb2xsZWN0aW9uLCBxdWVyeSwgb3B0aW9ucyA9IHt9KSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgc2V0VGltZW91dChhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwodHlwZW9mIGNvbGxlY3Rpb24sICdzdHJpbmcnKTtcclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2YgcXVlcnksICdvYmplY3QnKTtcclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2Ygb3B0aW9ucywgJ29iamVjdCcpO1xyXG5cclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChjbGllbnQuaXNDb25uZWN0ZWQoKSwgdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKGNvbGxlY3Rpb24pLmNyZWF0ZUluZGV4KHF1ZXJ5LCBvcHRpb25zKTtcclxuXHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZXhjZXB0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDApO1xyXG4gICAgfSksXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDQktGL0L/QvtC70L3Rj9C10YIg0LDQs9GA0LXQs9Cw0YbQuNGOLlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25cclxuICAgICAqIEBwYXJhbSB7QXJyYXl9IHBpcGVsaW5lXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xyXG4gICAgICogQHJldHVybiB7UHJvbWlzZX1cclxuICAgICAqL1xyXG4gICAgYWdncmVnYXRlOiAoY29sbGVjdGlvbiwgcGlwZWxpbmUsIG9wdGlvbnMgPSB7fSkgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIHNldFRpbWVvdXQoYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHR5cGVvZiBjb2xsZWN0aW9uLCAnc3RyaW5nJyk7XHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoQXJyYXkuaXNBcnJheShwaXBlbGluZSksIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHR5cGVvZiBvcHRpb25zLCAnb2JqZWN0Jyk7XHJcblxyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocGlwZWxpbmUpO1xyXG5cclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChjbGllbnQuaXNDb25uZWN0ZWQoKSwgdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgLy8gaHR0cHM6Ly9kb2NzLm1vbmdvZGIuY29tL21hbnVhbC9yZWZlcmVuY2UvbWV0aG9kL2RiLmNvbGxlY3Rpb24uYWdncmVnYXRlL1xyXG4gICAgICAgICAgICAgICAgLy8gaHR0cHM6Ly9tb25nb2RiLmdpdGh1Yi5pby9ub2RlLW1vbmdvZGItbmF0aXZlLzIuMC90dXRvcmlhbHMvYWdncmVnYXRpb24vXHJcbiAgICAgICAgICAgICAgICAvLyBodHRwOi8vbW9uZ29kYi5naXRodWIuaW8vbm9kZS1tb25nb2RiLW5hdGl2ZS8zLjEvYXBpL0NvbGxlY3Rpb24uaHRtbCNhZ2dyZWdhdGVcclxuICAgICAgICAgICAgICAgIC8vIGh0dHBzOi8vZG9jcy5tb25nb2RiLmNvbS92NC4wL3JlZmVyZW5jZS9vcGVyYXRvci9hZ2dyZWdhdGlvbi1waXBlbGluZS9cclxuICAgICAgICAgICAgICAgIC8vIGh0dHBzOi8vZG9jcy5tb25nb2RiLmNvbS92NC4wL3JlZmVyZW5jZS9vcGVyYXRvci9hZ2dyZWdhdGlvbi9cclxuICAgICAgICAgICAgICAgIC8vIGh0dHBzOi8vZG9jcy5tb25nb2RiLmNvbS92NC4wL3JlZmVyZW5jZS9jb21tYW5kL2FnZ3JlZ2F0ZS9cclxuXHJcbiAgICAgICAgICAgICAgICAvLyBodHRwczovL2RvY3MubW9uZ29kYi5jb20vbWFudWFsL2NvcmUvYWdncmVnYXRpb24tcGlwZWxpbmUtbGltaXRzLyNtZW1vcnktcmVzdHJpY3Rpb25zXHJcblxyXG4gICAgICAgICAgICAgICAgLy8g0K3RgtCw0L/RiyDQutC+0L3QstC10LnQtdGA0LAg0LjQvNC10Y7RgiDQvtCz0YDQsNC90LjRh9C10L3QuNC1INCyIDEwMCDQvNC10LPQsNCx0LDQudGCINC+0L/QtdGA0LDRgtC40LLQvdC+0Lkg0L/QsNC80Y/RgtC4LiDQldGB0LvQuCDRjdGC0LDQvyDQv9GA0LXQstGL0YjQsNC10YIg0Y3RgtC+0YIg0L/RgNC10LTQtdC7LCBNb25nb0RCINCy0YvQtNCw0YHRgiDQvtGI0LjQsdC60YMuINCn0YLQvtCx0Ysg0YDQsNC30YDQtdGI0LjRgtGMINC+0LHRgNCw0LHQvtGC0LrRgyDQsdC+0LvRjNGI0LjRhSDQvdCw0LHQvtGA0L7QsiDQtNCw0L3QvdGL0YUsINC40YHQv9C+0LvRjNC30YPQudGC0LUg0L/QsNGA0LDQvNC10YLRgCBhbGxvd0Rpc2tVc2UsINGH0YLQvtCx0Ysg0YDQsNC30YDQtdGI0LjRgtGMINGN0YLQsNC/0LDQvCDQutC+0L3QstC10LnQtdGA0LAg0LDQs9GA0LXQs9Cw0YbQuNC4INC30LDQv9C40YHRi9Cy0LDRgtGMINC00LDQvdC90YvQtSDQstC+INCy0YDQtdC80LXQvdC90YvQtSDRhNCw0LnQu9GLLlxyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZGIuY29sbGVjdGlvbihjb2xsZWN0aW9uKS5hZ2dyZWdhdGUocGlwZWxpbmUsIG9wdGlvbnMpLnRvQXJyYXkoKTtcclxuXHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZXhjZXB0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDApO1xyXG4gICAgfSksXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDQktGL0L/QvtC70L3Rj9C10YIg0LXQtNC40L3QuNGH0L3Ri9C5INC/0L7QuNGB0LouXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29sbGVjdGlvblxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IHF1ZXJ5XHJcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfVxyXG4gICAgICovXHJcbiAgICBmaW5kT25lOiAoY29sbGVjdGlvbiwgcXVlcnkpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2YgY29sbGVjdGlvbiwgJ3N0cmluZycpO1xyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHR5cGVvZiBxdWVyeSwgJ29iamVjdCcpO1xyXG5cclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChjbGllbnQuaXNDb25uZWN0ZWQoKSwgdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKGNvbGxlY3Rpb24pLmZpbmRPbmUocXVlcnkpO1xyXG5cclxuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHtcclxuICAgICAgICAgICAgICAgIHJlamVjdChleGNlcHRpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgMCk7XHJcbiAgICB9KSxcclxuXHJcbiAgICAvKipcclxuICAgICAqINCS0YvQv9C+0LvQvdGP0LXRgiDQvNC90L7QttC10YHRgtCy0LXQvdC90YvQuSDQv9C+0LjRgdC6LlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25cclxuICAgICAqIEByZXR1cm4ge1Byb21pc2V9XHJcbiAgICAgKi9cclxuICAgIGdldEFsbDogKGNvbGxlY3Rpb24pID0+IG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2YgY29sbGVjdGlvbiwgJ3N0cmluZycpO1xyXG5cclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChjbGllbnQuaXNDb25uZWN0ZWQoKSwgdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKGNvbGxlY3Rpb24pLmZpbmQoKS50b0FycmF5KCk7XHJcblxyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KGV4Y2VwdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuICAgIH0pLFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog0JLRi9C/0L7Qu9C90Y/QtdGCINC10LTQuNC90LjRh9C90YPRjiDQstGB0YLQsNCy0LrRgy5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcXVlcnlcclxuICAgICAqIEByZXR1cm4ge1Byb21pc2V9XHJcbiAgICAgKi9cclxuICAgIGluc2VydE9uZTogKGNvbGxlY3Rpb24sIHF1ZXJ5KSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgc2V0VGltZW91dChhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwodHlwZW9mIGNvbGxlY3Rpb24sICdzdHJpbmcnKTtcclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2YgcXVlcnksICdvYmplY3QnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2xpZW50LmlzQ29ubmVjdGVkKCksIHRydWUpO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZGIuY29sbGVjdGlvbihjb2xsZWN0aW9uKS5pbnNlcnRPbmUocXVlcnkpO1xyXG5cclxuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHtcclxuICAgICAgICAgICAgICAgIHJlamVjdChleGNlcHRpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgMCk7XHJcbiAgICB9KSxcclxuXHJcbiAgICAvKipcclxuICAgICAqINCS0YvQv9C+0LvQvdGP0LXRgiDQvNCw0YHRgdC+0LLRg9GOINCy0YHRgtCw0LLQutGDLlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25cclxuICAgICAqIEBwYXJhbSB7QXJyYXl9IHF1ZXJ5XHJcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfVxyXG4gICAgICovXHJcbiAgICBpbnNlcnRNYW55OiAoY29sbGVjdGlvbiwgcXVlcnkpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2YgY29sbGVjdGlvbiwgJ3N0cmluZycpO1xyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHR5cGVvZiBxdWVyeSwgJ29iamVjdCcpO1xyXG5cclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChBcnJheS5pc0FycmF5KHF1ZXJ5KSwgdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNsaWVudC5pc0Nvbm5lY3RlZCgpLCB0cnVlKTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBodHRwczovL2RvY3MubW9uZ29kYi5jb20vdjQuMC9yZWZlcmVuY2UvbWV0aG9kL2RiLmNvbGxlY3Rpb24uaW5zZXJ0TWFueS9cclxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZGIuY29sbGVjdGlvbihjb2xsZWN0aW9uKS5pbnNlcnRNYW55KHF1ZXJ5KTtcclxuXHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZXhjZXB0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDApO1xyXG4gICAgfSksXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDQktGL0L/QvtC70L3Rj9C10YIg0LXQtNC40L3QuNGH0L3QvtC1INC+0LHQvdC+0LLQu9C10L3QuNC1LlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25cclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBmaWx0ZXJcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSB1cGRhdGVcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXHJcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfVxyXG4gICAgICovXHJcbiAgICB1cGRhdGVPbmU6IChjb2xsZWN0aW9uLCBmaWx0ZXIsIHVwZGF0ZSwgb3B0aW9ucyA9IHt9KSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgc2V0VGltZW91dChhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwodHlwZW9mIGNvbGxlY3Rpb24sICdzdHJpbmcnKTtcclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2YgZmlsdGVyLCAnb2JqZWN0Jyk7XHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwodHlwZW9mIHVwZGF0ZSwgJ29iamVjdCcpO1xyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHR5cGVvZiBvcHRpb25zLCAnb2JqZWN0Jyk7XHJcblxyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNsaWVudC5pc0Nvbm5lY3RlZCgpLCB0cnVlKTtcclxuXHJcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oY29sbGVjdGlvbikudXBkYXRlT25lKGZpbHRlciwgdXBkYXRlLCBvcHRpb25zKTtcclxuXHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZXhjZXB0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDApO1xyXG4gICAgfSksXHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICog0JLRi9C/0L7Qu9C90Y/QtdGCINC80L3QvtC20LXRgdGC0LLQtdC90L3QvtC1INC+0LHQvdC+0LLQu9C10L3QuNC1LlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25cclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBmaWx0ZXJcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSB1cGRhdGVcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXHJcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfVxyXG4gICAgICovXHJcbiAgICB1cGRhdGVNYW55OiAoY29sbGVjdGlvbiwgZmlsdGVyLCB1cGRhdGUsIG9wdGlvbnMgPSB7fSkgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIHNldFRpbWVvdXQoYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHR5cGVvZiBjb2xsZWN0aW9uLCAnc3RyaW5nJyk7XHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwodHlwZW9mIGZpbHRlciwgJ29iamVjdCcpO1xyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHR5cGVvZiB1cGRhdGUsICdvYmplY3QnKTtcclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2Ygb3B0aW9ucywgJ29iamVjdCcpO1xyXG5cclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChjbGllbnQuaXNDb25uZWN0ZWQoKSwgdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKGNvbGxlY3Rpb24pLnVwZGF0ZU1hbnkoZmlsdGVyLCB1cGRhdGUsIG9wdGlvbnMpO1xyXG5cclxuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHtcclxuICAgICAgICAgICAgICAgIHJlamVjdChleGNlcHRpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgMCk7XHJcbiAgICB9KSxcclxuXHJcbiAgICAvKipcclxuICAgICAqINCS0YvQv9C+0LvQvdGP0LXRgiDQtdC00LjQvdC40YfQvdC+0LUg0YPQtNCw0LvQtdC90LjQtS5cclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZmlsdGVyXHJcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfVxyXG4gICAgICovXHJcbiAgICBkZWxldGVPbmU6IChjb2xsZWN0aW9uLCBmaWx0ZXIpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2YgY29sbGVjdGlvbiwgJ3N0cmluZycpO1xyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHR5cGVvZiBmaWx0ZXIsICdvYmplY3QnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2xpZW50LmlzQ29ubmVjdGVkKCksIHRydWUpO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZGIuY29sbGVjdGlvbihjb2xsZWN0aW9uKS5kZWxldGVPbmUoZmlsdGVyKTtcclxuXHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZXhjZXB0aW9uKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDApO1xyXG4gICAgfSksXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDQktGL0L/QvtC70L3Rj9C10YIg0LzQsNGB0YHQvtCy0L7QtSDRg9C00LDQu9C10L3QuNC1LlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25cclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBmaWx0ZXJcclxuICAgICAqIEByZXR1cm4ge1Byb21pc2V9XHJcbiAgICAgKi9cclxuICAgIGRlbGV0ZU1hbnk6IChjb2xsZWN0aW9uLCBmaWx0ZXIpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGFzc2VydC5zdHJpY3RFcXVhbCh0eXBlb2YgY29sbGVjdGlvbiwgJ3N0cmluZycpO1xyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHR5cGVvZiBmaWx0ZXIsICdvYmplY3QnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2xpZW50LmlzQ29ubmVjdGVkKCksIHRydWUpO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZGIuY29sbGVjdGlvbihjb2xsZWN0aW9uKS5kZWxldGVNYW55KGZpbHRlcik7XHJcblxyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KGV4Y2VwdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCAwKTtcclxuICAgIH0pLFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog0JLRi9C/0L7Qu9C90Y/QtdGCINC/0L7QtNGB0YfQtdGCINC00L7QutGD0LzQtdC90YLQvtCyLlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxlY3Rpb25cclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBxdWVyeVxyXG4gICAgICogQHJldHVybiB7UHJvbWlzZX1cclxuICAgICAqL1xyXG4gICAgY291bnREb2N1bWVudHM6IChjb2xsZWN0aW9uLCBxdWVyeSkgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIHNldFRpbWVvdXQoYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKHR5cGVvZiBjb2xsZWN0aW9uLCAnc3RyaW5nJyk7XHJcbiAgICAgICAgICAgICAgICBhc3NlcnQuc3RyaWN0RXF1YWwodHlwZW9mIHF1ZXJ5LCAnb2JqZWN0Jyk7XHJcblxyXG4gICAgICAgICAgICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNsaWVudC5pc0Nvbm5lY3RlZCgpLCB0cnVlKTtcclxuXHJcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oY29sbGVjdGlvbikuY291bnREb2N1bWVudHMocXVlcnkpO1xyXG5cclxuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHtcclxuICAgICAgICAgICAgICAgIHJlamVjdChleGNlcHRpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgMCk7XHJcbiAgICB9KSxcclxufTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "mongodb.js"
      ],
      "names": [
        "assert",
        "require",
        "mongodb",
        "EventEmitter",
        "config",
        "events",
        "tags",
        "client",
        "db",
        "on",
        "console",
        "log",
        "connection",
        "options",
        "host",
        "port",
        "source",
        "database",
        "username",
        "password",
        "MongoClient",
        "connect",
        "emit",
        "strictEqual",
        "isConnected",
        "error",
        "catch",
        "exception",
        "process",
        "exit",
        "module",
        "exports",
        "id",
        "value",
        "ObjectId",
        "isValid",
        "result",
        "createCollection",
        "Promise",
        "resolve",
        "reject",
        "setTimeout",
        "response",
        "createIndex",
        "collection",
        "query",
        "aggregate",
        "pipeline",
        "Array",
        "isArray",
        "toArray",
        "findOne",
        "getAll",
        "find",
        "insertOne",
        "insertMany",
        "updateOne",
        "filter",
        "update",
        "updateMany",
        "deleteOne",
        "deleteMany",
        "countDocuments"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "sourcesContent": [
        "const assert = require('assert');\r\nconst mongodb = require('mongodb');\r\nconst EventEmitter = require('events');\r\n\r\nconst config = require('../config.json').mongodb;\r\n\r\nconst events = new EventEmitter();\r\nconst tags = { client: 'MongoDB::client', db: 'MongoDB::db' };\r\n\r\nevents.on('created', () => console.log(`${tags.client} created`));\r\nevents.on('connected', () => console.log(`${tags.db} connected`));\r\n\r\nlet client;\r\nlet db;\r\n\r\n// eslint-disable-next-line func-names\r\n(async function () {\r\n    // eslint-disable-next-line no-undef\r\n    const { connection, options } = config;\r\n    const { host, port, source, database, username, password } = connection;\r\n\r\n    client = await mongodb.MongoClient.connect(`mongodb://${username}:${password}@${host}:${port}/?authSource=${source}`, options);\r\n\r\n    events.emit('created');\r\n\r\n    db = client.db(database);\r\n\r\n    assert.strictEqual(typeof client, 'object');\r\n    assert.strictEqual(typeof db, 'object');\r\n    assert.strictEqual(client.isConnected(), true);\r\n\r\n\tevents.emit('connected');\r\n\r\n    db.on('close', error => console.log(`${tags.db} close`, error));\r\n    db.on('error', error => console.log(`${tags.db} error`, error));\r\n    db.on('fullsetup', () => console.log(`${tags.db} fullsetup`));\r\n    db.on('parseError', error => console.log(`${tags.db} parseError`, error));\r\n\tdb.on('reconnect', () => console.log(`${tags.db} reconnect`));\r\n\tdb.on('timeout', error => console.log(`${tags.db} timeout`, error));\r\n}()).catch(exception => {\r\n    console.log(exception);\r\n    process.exit(1);\r\n});\r\n\r\nmodule.exports = {\r\n    events,\r\n\r\n    /**\r\n     * Преобразовывает строку в ObjectID.\r\n     * @param {string} value\r\n     * @return {ObjectId}\r\n     */\r\n\tid: value => {\r\n        assert.strictEqual(typeof value, 'string');\r\n        assert.strictEqual(mongodb.ObjectId.isValid(value), true);\r\n\r\n        const result = new mongodb.ObjectId(value);\r\n\r\n        assert.strictEqual(typeof result, 'object');\r\n\r\n        return result;\r\n    },\r\n\r\n    /**\r\n     * Создает новую коллекцию.\r\n     * @param {string} value\r\n     * @return {Promise}\r\n     */\r\n    createCollection: value => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof value, 'string');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.createCollection(value);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Создает новый индекс.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    createIndex: (collection, query, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).createIndex(query, options);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет агрегацию.\r\n     * @param {string} collection\r\n     * @param {Array} pipeline\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    aggregate: (collection, pipeline, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(Array.isArray(pipeline), true);\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                // console.log(pipeline);\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                // https://docs.mongodb.com/manual/reference/method/db.collection.aggregate/\r\n                // https://mongodb.github.io/node-mongodb-native/2.0/tutorials/aggregation/\r\n                // http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#aggregate\r\n                // https://docs.mongodb.com/v4.0/reference/operator/aggregation-pipeline/\r\n                // https://docs.mongodb.com/v4.0/reference/operator/aggregation/\r\n                // https://docs.mongodb.com/v4.0/reference/command/aggregate/\r\n\r\n                // https://docs.mongodb.com/manual/core/aggregation-pipeline-limits/#memory-restrictions\r\n\r\n                // Этапы конвейера имеют ограничение в 100 мегабайт оперативной памяти. Если этап превышает этот предел, MongoDB выдаст ошибку. Чтобы разрешить обработку больших наборов данных, используйте параметр allowDiskUse, чтобы разрешить этапам конвейера агрегации записывать данные во временные файлы.\r\n\r\n                const response = await db.collection(collection).aggregate(pipeline, options).toArray();\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичный поиск.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @return {Promise}\r\n     */\r\n    findOne: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).findOne(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет множественный поиск.\r\n     * @param {string} collection\r\n     * @return {Promise}\r\n     */\r\n    getAll: (collection) => new Promise(async (resolve, reject) => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).find().toArray();\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичную вставку.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @return {Promise}\r\n     */\r\n    insertOne: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).insertOne(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет массовую вставку.\r\n     * @param {string} collection\r\n     * @param {Array} query\r\n     * @return {Promise}\r\n     */\r\n    insertMany: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(Array.isArray(query), true);\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                // https://docs.mongodb.com/v4.0/reference/method/db.collection.insertMany/\r\n                const response = await db.collection(collection).insertMany(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичное обновление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @param {object} update\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    updateOne: (collection, filter, update, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n                assert.strictEqual(typeof update, 'object');\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).updateOne(filter, update, options);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n        /**\r\n     * Выполняет множественное обновление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @param {object} update\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    updateMany: (collection, filter, update, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n                assert.strictEqual(typeof update, 'object');\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).updateMany(filter, update, options);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичное удаление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @return {Promise}\r\n     */\r\n    deleteOne: (collection, filter) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).deleteOne(filter);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет массовое удаление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @return {Promise}\r\n     */\r\n    deleteMany: (collection, filter) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).deleteMany(filter);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет подсчет документов.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @return {Promise}\r\n     */\r\n    countDocuments: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).countDocuments(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n};\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1585418714279
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\nodemailer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\nodemailer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\nodemailer.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\nodemailer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
        "sourceFileName": "nodemailer.js"
      }
    },
    "ast": null,
    "code": "const nodeMailer = require('nodemailer');\n\nmodule.exports = nodeMailer.createTransport({\n  host: 'smtp-pulse.com',\n  port: 2525,\n  // secure: true,\n  auth: {\n    user: 'timchenkoandrey19@gmail.com',\n    pass: 'KLdaaXEJKcN'\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVtYWlsZXIuanMiXSwibmFtZXMiOlsibm9kZU1haWxlciIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlVHJhbnNwb3J0IiwiaG9zdCIsInBvcnQiLCJhdXRoIiwidXNlciIsInBhc3MiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLFlBQUQsQ0FBMUI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsVUFBVSxDQUFDSSxlQUFYLENBQTJCO0FBQ3BDQyxFQUFBQSxJQUFJLEVBQUUsZ0JBRDhCO0FBRXBDQyxFQUFBQSxJQUFJLEVBQUUsSUFGOEI7QUFHcEM7QUFDQUMsRUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLElBQUFBLElBQUksRUFBRSw2QkFESjtBQUVGQyxJQUFBQSxJQUFJLEVBQUU7QUFGSjtBQUo4QixDQUEzQixDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFIRFJZV0FcXERlc2t0b3BcXHZlZ2V0YWJsZXMtbWFzdGVyXFxiYWNrZW5kXFxzeXN0ZW1zXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBub2RlTWFpbGVyID0gcmVxdWlyZSgnbm9kZW1haWxlcicpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBub2RlTWFpbGVyLmNyZWF0ZVRyYW5zcG9ydCh7XHJcbiAgICAgICAgaG9zdDogJ3NtdHAtcHVsc2UuY29tJyxcclxuICAgICAgICBwb3J0OiAyNTI1LFxyXG4gICAgICAgIC8vIHNlY3VyZTogdHJ1ZSxcclxuICAgICAgICBhdXRoOiB7XHJcbiAgICAgICAgICAgIHVzZXI6ICd0aW1jaGVua29hbmRyZXkxOUBnbWFpbC5jb20nLFxyXG4gICAgICAgICAgICBwYXNzOiAnS0xkYWFYRUpLY04nLFxyXG4gICAgICAgIH0sXHJcbiAgICB9KTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "nodemailer.js"
      ],
      "names": [
        "nodeMailer",
        "require",
        "module",
        "exports",
        "createTransport",
        "host",
        "port",
        "auth",
        "user",
        "pass"
      ],
      "mappings": "AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiBH,UAAU,CAACI,eAAX,CAA2B;AACpCC,EAAAA,IAAI,EAAE,gBAD8B;AAEpCC,EAAAA,IAAI,EAAE,IAF8B;AAGpC;AACAC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,6BADJ;AAEFC,IAAAA,IAAI,EAAE;AAFJ;AAJ8B,CAA3B,CAAjB",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "sourcesContent": [
        "const nodeMailer = require('nodemailer');\r\n\r\nmodule.exports = nodeMailer.createTransport({\r\n        host: 'smtp-pulse.com',\r\n        port: 2525,\r\n        // secure: true,\r\n        auth: {\r\n            user: 'timchenkoandrey19@gmail.com',\r\n            pass: 'KLdaaXEJKcN',\r\n        },\r\n    });\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1585418713076
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "require('./express.js');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPLENBQUMsY0FBRCxDQUFQIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQUhEUllXQVxcRGVza3RvcFxcdmVnZXRhYmxlcy1tYXN0ZXJcXGJhY2tlbmRcXHN0YXJ0dXBcXCIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vZXhwcmVzcy5qcycpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require"
      ],
      "mappings": "AAAAA,OAAO,CAAC,cAAD,CAAP",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "sourcesContent": [
        "require('./express.js');\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1572442689309
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\express.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\express.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\express.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\express.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
        "sourceFileName": "express.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst cors = require('cors');\n\nconst router = require('../routers/main'); // import './passport';\n// import routers from '../routers';\n\n\nconst app = express(); // const RedisStore = redisStore(session);\n// const redisClient = redis.createClient();\n// const sessionMiddleware = session({\n//     store: new RedisStore({ client: redisClient }),\n//     secret: 'affsafasafs',\n//     resave: true,\n//     rolling: true,\n//     saveUninitialized: false,\n//     cookie: {\n//         path: '/',\n//         maxAge: 60 * 60 * 1000,\n//         httpOnly: false,\n//     },\n// });\n// app.use(cors({\n//     origin: '*',\n//     methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\n//     credentials: true,\n// }));\n// app.use(bodyParser.json());\n// app.use(bodyParser.urlencoded({ extended: true }));\n// app.use(cookieParser());\n// app.use(sessionMiddleware);\n// app.use(passport.initialize());\n// app.use(passport.session());\n\nconsole.log(router); // app.use('/', router);\n// app.use('/admin', routers.admin);\n// app.use('/events', routers.events);\n// app.use('/auth', routers.auth);\n// app.use('/user', routers.user);\n// app.use('/teams', routers.teams);\n// app.use('/projects', routers.projects);\n// app.use('/notifications', routers.notifications);\n// app.use('/portfolio', routers.portfolio);\n// app.use('/profile', routers.profile);\n// app.use('/postal', routers.postal);\n\napp.listen(8000);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4cHJlc3MuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5UGFyc2VyIiwiY29ycyIsInJvdXRlciIsImFwcCIsImNvbnNvbGUiLCJsb2ciLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQSxNQUFNRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUVBLE1BQU1HLE1BQU0sR0FBR0gsT0FBTyxDQUFDLGlCQUFELENBQXRCLEMsQ0FFQTtBQUVBOzs7QUFFQSxNQUFNSSxHQUFHLEdBQUdMLE9BQU8sRUFBbkIsQyxDQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBTSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsTUFBWixFLENBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTs7QUFFQUMsR0FBRyxDQUFDRyxNQUFKLENBQVcsSUFBWCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFIRFJZV0FcXERlc2t0b3BcXHZlZ2V0YWJsZXMtbWFzdGVyXFxiYWNrZW5kXFxzdGFydHVwXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcclxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcclxuXHJcbmNvbnN0IHJvdXRlciA9IHJlcXVpcmUoJy4uL3JvdXRlcnMvbWFpbicpO1xyXG5cclxuLy8gaW1wb3J0ICcuL3Bhc3Nwb3J0JztcclxuXHJcbi8vIGltcG9ydCByb3V0ZXJzIGZyb20gJy4uL3JvdXRlcnMnO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuLy8gY29uc3QgUmVkaXNTdG9yZSA9IHJlZGlzU3RvcmUoc2Vzc2lvbik7XHJcblxyXG4vLyBjb25zdCByZWRpc0NsaWVudCA9IHJlZGlzLmNyZWF0ZUNsaWVudCgpO1xyXG5cclxuLy8gY29uc3Qgc2Vzc2lvbk1pZGRsZXdhcmUgPSBzZXNzaW9uKHtcclxuLy8gICAgIHN0b3JlOiBuZXcgUmVkaXNTdG9yZSh7IGNsaWVudDogcmVkaXNDbGllbnQgfSksXHJcbi8vICAgICBzZWNyZXQ6ICdhZmZzYWZhc2FmcycsXHJcbi8vICAgICByZXNhdmU6IHRydWUsXHJcbi8vICAgICByb2xsaW5nOiB0cnVlLFxyXG4vLyAgICAgc2F2ZVVuaW5pdGlhbGl6ZWQ6IGZhbHNlLFxyXG4vLyAgICAgY29va2llOiB7XHJcbi8vICAgICAgICAgcGF0aDogJy8nLFxyXG4vLyAgICAgICAgIG1heEFnZTogNjAgKiA2MCAqIDEwMDAsXHJcbi8vICAgICAgICAgaHR0cE9ubHk6IGZhbHNlLFxyXG4vLyAgICAgfSxcclxuLy8gfSk7XHJcblxyXG5cclxuLy8gYXBwLnVzZShjb3JzKHtcclxuLy8gICAgIG9yaWdpbjogJyonLFxyXG4vLyAgICAgbWV0aG9kczogJ0dFVCxIRUFELFBVVCxQQVRDSCxQT1NULERFTEVURSxPUFRJT05TJyxcclxuLy8gICAgIGNyZWRlbnRpYWxzOiB0cnVlLFxyXG4vLyB9KSk7XHJcbi8vIGFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG4vLyBhcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcclxuLy8gYXBwLnVzZShjb29raWVQYXJzZXIoKSk7XHJcbi8vIGFwcC51c2Uoc2Vzc2lvbk1pZGRsZXdhcmUpO1xyXG4vLyBhcHAudXNlKHBhc3Nwb3J0LmluaXRpYWxpemUoKSk7XHJcbi8vIGFwcC51c2UocGFzc3BvcnQuc2Vzc2lvbigpKTtcclxuXHJcbmNvbnNvbGUubG9nKHJvdXRlcik7XHJcblxyXG4vLyBhcHAudXNlKCcvJywgcm91dGVyKTtcclxuXHJcbi8vIGFwcC51c2UoJy9hZG1pbicsIHJvdXRlcnMuYWRtaW4pO1xyXG5cclxuLy8gYXBwLnVzZSgnL2V2ZW50cycsIHJvdXRlcnMuZXZlbnRzKTtcclxuXHJcbi8vIGFwcC51c2UoJy9hdXRoJywgcm91dGVycy5hdXRoKTtcclxuXHJcbi8vIGFwcC51c2UoJy91c2VyJywgcm91dGVycy51c2VyKTtcclxuXHJcbi8vIGFwcC51c2UoJy90ZWFtcycsIHJvdXRlcnMudGVhbXMpO1xyXG5cclxuLy8gYXBwLnVzZSgnL3Byb2plY3RzJywgcm91dGVycy5wcm9qZWN0cyk7XHJcblxyXG4vLyBhcHAudXNlKCcvbm90aWZpY2F0aW9ucycsIHJvdXRlcnMubm90aWZpY2F0aW9ucyk7XHJcblxyXG4vLyBhcHAudXNlKCcvcG9ydGZvbGlvJywgcm91dGVycy5wb3J0Zm9saW8pO1xyXG5cclxuLy8gYXBwLnVzZSgnL3Byb2ZpbGUnLCByb3V0ZXJzLnByb2ZpbGUpO1xyXG5cclxuLy8gYXBwLnVzZSgnL3Bvc3RhbCcsIHJvdXRlcnMucG9zdGFsKTtcclxuXHJcbmFwcC5saXN0ZW4oODAwMCk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "express.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "cors",
        "router",
        "app",
        "console",
        "log",
        "listen"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMG,MAAM,GAAGH,OAAO,CAAC,iBAAD,CAAtB,C,CAEA;AAEA;;;AAEA,MAAMI,GAAG,GAAGL,OAAO,EAAnB,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAM,OAAO,CAACC,GAAR,CAAYH,MAAZ,E,CAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;AAEAC,GAAG,CAACG,MAAJ,CAAW,IAAX",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\n\r\nconst router = require('../routers/main');\r\n\r\n// import './passport';\r\n\r\n// import routers from '../routers';\r\n\r\nconst app = express();\r\n\r\n// const RedisStore = redisStore(session);\r\n\r\n// const redisClient = redis.createClient();\r\n\r\n// const sessionMiddleware = session({\r\n//     store: new RedisStore({ client: redisClient }),\r\n//     secret: 'affsafasafs',\r\n//     resave: true,\r\n//     rolling: true,\r\n//     saveUninitialized: false,\r\n//     cookie: {\r\n//         path: '/',\r\n//         maxAge: 60 * 60 * 1000,\r\n//         httpOnly: false,\r\n//     },\r\n// });\r\n\r\n\r\n// app.use(cors({\r\n//     origin: '*',\r\n//     methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\r\n//     credentials: true,\r\n// }));\r\n// app.use(bodyParser.json());\r\n// app.use(bodyParser.urlencoded({ extended: true }));\r\n// app.use(cookieParser());\r\n// app.use(sessionMiddleware);\r\n// app.use(passport.initialize());\r\n// app.use(passport.session());\r\n\r\nconsole.log(router);\r\n\r\n// app.use('/', router);\r\n\r\n// app.use('/admin', routers.admin);\r\n\r\n// app.use('/events', routers.events);\r\n\r\n// app.use('/auth', routers.auth);\r\n\r\n// app.use('/user', routers.user);\r\n\r\n// app.use('/teams', routers.teams);\r\n\r\n// app.use('/projects', routers.projects);\r\n\r\n// app.use('/notifications', routers.notifications);\r\n\r\n// app.use('/portfolio', routers.portfolio);\r\n\r\n// app.use('/profile', routers.profile);\r\n\r\n// app.use('/postal', routers.postal);\r\n\r\napp.listen(8000);\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1585420781264
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\routers\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\routers\\\\main.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\main.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\main.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\",
        "sourceFileName": "main.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst injector = require('../modules/injector');\n\nconst router = express.Router(); // router.use((req, res, next) => next());\n\nrouter.get('/', (req, res) => {\n  res.send(injector());\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJpbmplY3RvciIsInJvdXRlciIsIlJvdXRlciIsImdldCIsInJlcSIsInJlcyIsInNlbmQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBRUEsTUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMscUJBQUQsQ0FBeEI7O0FBRUEsTUFBTUUsTUFBTSxHQUFHSCxPQUFPLENBQUNJLE1BQVIsRUFBZixDLENBRUE7O0FBRUFELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLEdBQVgsRUFBaUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDM0JBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTTixRQUFRLEVBQWpCO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFIRFJZV0FcXERlc2t0b3BcXHZlZ2V0YWJsZXMtbWFzdGVyXFxiYWNrZW5kXFxyb3V0ZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5cclxuY29uc3QgaW5qZWN0b3IgPSByZXF1aXJlKCcuLi9tb2R1bGVzL2luamVjdG9yJyk7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxuLy8gcm91dGVyLnVzZSgocmVxLCByZXMsIG5leHQpID0+IG5leHQoKSk7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvJywgIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnNlbmQoaW5qZWN0b3IoKSk7XHJcbn0pO1xyXG5cclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "express",
        "require",
        "injector",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "send"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AAEA,MAAME,MAAM,GAAGH,OAAO,CAACI,MAAR,EAAf,C,CAEA;;AAEAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAiB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3BA,EAAAA,GAAG,CAACC,IAAJ,CAASN,QAAQ,EAAjB;AACH,CAFD",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\",
      "sourcesContent": [
        "const express = require('express');\r\n\r\nconst injector = require('../modules/injector');\r\n\r\nconst router = express.Router();\r\n\r\n// router.use((req, res, next) => next());\r\n\r\nrouter.get('/',  (req, res) => {\r\n    res.send(injector());\r\n});\r\n\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1585420760930
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\modules\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\modules\\\\injector.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\injector.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\injector.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\injector.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\",
        "sourceFileName": "injector.js"
      }
    },
    "ast": null,
    "code": "const fs = require('fs');\n\nconst path = require('path');\n\nconst React = require('react');\n\nconst {\n  renderToString\n} = require('react-dom/server'); // const { StaticRouter } = require('react-router-dom');\n// const { renderRoutes } = require('react-router-config');\n// const { Provider } = require('react-redux');\n\n\nconst Test = require('../../frontend/src/App'); // import Routes from '../../frontend/routes/routes';\n// import store from '../../frontend/redux/store';\n\n\nmodule.exports = function injector(location) {\n  try {\n    const content = renderToString(Test);\n    const dir = path.resolve(__dirname, './index.html');\n    let data = fs.readFileSync(dir, 'utf8');\n    data = data.replace('<div id=\"root\"></div>', `<div id=\"root\">${content}</div>`);\n    return data;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluamVjdG9yLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJSZWFjdCIsInJlbmRlclRvU3RyaW5nIiwiVGVzdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJpbmplY3RvciIsImxvY2F0aW9uIiwiY29udGVudCIsImRpciIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJkYXRhIiwicmVhZEZpbGVTeW5jIiwicmVwbGFjZSIsImVyciIsImNvbnNvbGUiLCJlcnJvciJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxNQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1FLEtBQUssR0FBR0YsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtBQUFFRyxFQUFBQTtBQUFGLElBQXFCSCxPQUFPLENBQUMsa0JBQUQsQ0FBbEMsQyxDQUNBO0FBQ0E7QUFDQTs7O0FBRUEsTUFBTUksSUFBSSxHQUFHSixPQUFPLENBQUMsd0JBQUQsQ0FBcEIsQyxDQUVBO0FBQ0E7OztBQUVBSyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsUUFBVCxDQUFrQkMsUUFBbEIsRUFBNEI7QUFDekMsTUFBSTtBQUNBLFVBQU1DLE9BQU8sR0FBR04sY0FBYyxDQUFDQyxJQUFELENBQTlCO0FBRUEsVUFBTU0sR0FBRyxHQUFHVCxJQUFJLENBQUNVLE9BQUwsQ0FBYUMsU0FBYixFQUF3QixjQUF4QixDQUFaO0FBRUEsUUFBSUMsSUFBSSxHQUFHZCxFQUFFLENBQUNlLFlBQUgsQ0FBZ0JKLEdBQWhCLEVBQXFCLE1BQXJCLENBQVg7QUFFQUcsSUFBQUEsSUFBSSxHQUFHQSxJQUFJLENBQUNFLE9BQUwsQ0FBYSx1QkFBYixFQUF1QyxrQkFBaUJOLE9BQVEsUUFBaEUsQ0FBUDtBQUVBLFdBQU9JLElBQVA7QUFDSCxHQVZELENBVUUsT0FBTUcsR0FBTixFQUFXO0FBQ1RDLElBQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjRixHQUFkO0FBRUEsV0FBTyxJQUFQO0FBQ0g7QUFDSixDQWhCRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFIRFJZV0FcXERlc2t0b3BcXHZlZ2V0YWJsZXMtbWFzdGVyXFxiYWNrZW5kXFxtb2R1bGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XHJcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XHJcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcclxuY29uc3QgeyByZW5kZXJUb1N0cmluZyB9ID0gcmVxdWlyZSgncmVhY3QtZG9tL3NlcnZlcicpO1xyXG4vLyBjb25zdCB7IFN0YXRpY1JvdXRlciB9ID0gcmVxdWlyZSgncmVhY3Qtcm91dGVyLWRvbScpO1xyXG4vLyBjb25zdCB7IHJlbmRlclJvdXRlcyB9ID0gcmVxdWlyZSgncmVhY3Qtcm91dGVyLWNvbmZpZycpO1xyXG4vLyBjb25zdCB7IFByb3ZpZGVyIH0gPSByZXF1aXJlKCdyZWFjdC1yZWR1eCcpO1xyXG5cclxuY29uc3QgVGVzdCA9IHJlcXVpcmUoJy4uLy4uL2Zyb250ZW5kL3NyYy9BcHAnKTtcclxuXHJcbi8vIGltcG9ydCBSb3V0ZXMgZnJvbSAnLi4vLi4vZnJvbnRlbmQvcm91dGVzL3JvdXRlcyc7XHJcbi8vIGltcG9ydCBzdG9yZSBmcm9tICcuLi8uLi9mcm9udGVuZC9yZWR1eC9zdG9yZSc7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluamVjdG9yKGxvY2F0aW9uKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSByZW5kZXJUb1N0cmluZyhUZXN0KTtcclxuXHJcbiAgICAgICAgY29uc3QgZGlyID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4vaW5kZXguaHRtbCcpO1xyXG5cclxuICAgICAgICBsZXQgZGF0YSA9IGZzLnJlYWRGaWxlU3luYyhkaXIsICd1dGY4Jyk7XHJcblxyXG4gICAgICAgIGRhdGEgPSBkYXRhLnJlcGxhY2UoJzxkaXYgaWQ9XCJyb290XCI+PC9kaXY+JywgYDxkaXYgaWQ9XCJyb290XCI+JHtjb250ZW50fTwvZGl2PmApO1xyXG5cclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgIH0gY2F0Y2goZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG5cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "injector.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "React",
        "renderToString",
        "Test",
        "module",
        "exports",
        "injector",
        "location",
        "content",
        "dir",
        "resolve",
        "__dirname",
        "data",
        "readFileSync",
        "replace",
        "err",
        "console",
        "error"
      ],
      "mappings": "AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAqBH,OAAO,CAAC,kBAAD,CAAlC,C,CACA;AACA;AACA;;;AAEA,MAAMI,IAAI,GAAGJ,OAAO,CAAC,wBAAD,CAApB,C,CAEA;AACA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AACzC,MAAI;AACA,UAAMC,OAAO,GAAGN,cAAc,CAACC,IAAD,CAA9B;AAEA,UAAMM,GAAG,GAAGT,IAAI,CAACU,OAAL,CAAaC,SAAb,EAAwB,cAAxB,CAAZ;AAEA,QAAIC,IAAI,GAAGd,EAAE,CAACe,YAAH,CAAgBJ,GAAhB,EAAqB,MAArB,CAAX;AAEAG,IAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,uBAAb,EAAuC,kBAAiBN,OAAQ,QAAhE,CAAP;AAEA,WAAOI,IAAP;AACH,GAVD,CAUE,OAAMG,GAAN,EAAW;AACTC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AAEA,WAAO,IAAP;AACH;AACJ,CAhBD",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\",
      "sourcesContent": [
        "const fs = require('fs');\r\nconst path = require('path');\r\nconst React = require('react');\r\nconst { renderToString } = require('react-dom/server');\r\n// const { StaticRouter } = require('react-router-dom');\r\n// const { renderRoutes } = require('react-router-config');\r\n// const { Provider } = require('react-redux');\r\n\r\nconst Test = require('../../frontend/src/App');\r\n\r\n// import Routes from '../../frontend/routes/routes';\r\n// import store from '../../frontend/redux/store';\r\n\r\nmodule.exports = function injector(location) {\r\n    try {\r\n        const content = renderToString(Test);\r\n\r\n        const dir = path.resolve(__dirname, './index.html');\r\n\r\n        let data = fs.readFileSync(dir, 'utf8');\r\n\r\n        data = data.replace('<div id=\"root\"></div>', `<div id=\"root\">${content}</div>`);\r\n\r\n        return data;\r\n    } catch(err) {\r\n        console.error(err);\r\n\r\n        return null;\r\n    }\r\n}\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1585418814346
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongodb = require('./mongodb');\n\nrequire('./nodemailer');\n\nglobal.mongodb = mongodb;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvZGIiLCJyZXF1aXJlIiwiZ2xvYmFsIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBQ0FBLE9BQU8sQ0FBQyxjQUFELENBQVA7O0FBRUFDLE1BQU0sQ0FBQ0YsT0FBUCxHQUFpQkEsT0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBSERSWVdBXFxEZXNrdG9wXFx2ZWdldGFibGVzLW1hc3RlclxcYmFja2VuZFxcc3lzdGVtc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29kYiA9IHJlcXVpcmUoJy4vbW9uZ29kYicpO1xyXG5yZXF1aXJlKCcuL25vZGVtYWlsZXInKTtcclxuXHJcbmdsb2JhbC5tb25nb2RiID0gbW9uZ29kYjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongodb",
        "require",
        "global"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACAA,OAAO,CAAC,cAAD,CAAP;;AAEAC,MAAM,CAACF,OAAP,GAAiBA,OAAjB",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "sourcesContent": [
        "const mongodb = require('./mongodb');\r\nrequire('./nodemailer');\r\n\r\nglobal.mongodb = mongodb;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585418711504
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\mongodb.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\mongodb.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\mongodb.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\mongodb.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
        "sourceFileName": "mongodb.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar assert = require('assert');\n\nvar mongodb = require('mongodb');\n\nvar EventEmitter = require('events');\n\nvar config = require('../config.json').mongodb;\n\nvar events = new EventEmitter();\nvar tags = {\n  client: 'MongoDB::client',\n  db: 'MongoDB::db'\n};\nevents.on('created', function () {\n  return console.log(\"\".concat(tags.client, \" created\"));\n});\nevents.on('connected', function () {\n  return console.log(\"\".concat(tags.db, \" connected\"));\n});\nvar client;\nvar db; // eslint-disable-next-line func-names\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var connection, options, host, port, source, database, username, password;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // eslint-disable-next-line no-undef\n          connection = config.connection, options = config.options;\n          host = connection.host, port = connection.port, source = connection.source, database = connection.database, username = connection.username, password = connection.password;\n          _context.next = 4;\n          return mongodb.MongoClient.connect(\"mongodb://\".concat(username, \":\").concat(password, \"@\").concat(host, \":\").concat(port, \"/?authSource=\").concat(source), options);\n\n        case 4:\n          client = _context.sent;\n          events.emit('created');\n          db = client.db(database);\n          assert.strictEqual(_typeof(client), 'object');\n          assert.strictEqual(_typeof(db), 'object');\n          assert.strictEqual(client.isConnected(), true);\n          events.emit('connected');\n          db.on('close', function (error) {\n            return console.log(\"\".concat(tags.db, \" close\"), error);\n          });\n          db.on('error', function (error) {\n            return console.log(\"\".concat(tags.db, \" error\"), error);\n          });\n          db.on('fullsetup', function () {\n            return console.log(\"\".concat(tags.db, \" fullsetup\"));\n          });\n          db.on('parseError', function (error) {\n            return console.log(\"\".concat(tags.db, \" parseError\"), error);\n          });\n          db.on('reconnect', function () {\n            return console.log(\"\".concat(tags.db, \" reconnect\"));\n          });\n          db.on('timeout', function (error) {\n            return console.log(\"\".concat(tags.db, \" timeout\"), error);\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))()[\"catch\"](function (exception) {\n  console.log(exception);\n  process.exit(1);\n});\n\nmodule.exports = {\n  events: events,\n\n  /**\r\n   * Преобразовывает строку в ObjectID.\r\n   * @param {string} value\r\n   * @return {ObjectId}\r\n   */\n  id: function id(value) {\n    assert.strictEqual(_typeof(value), 'string');\n    assert.strictEqual(mongodb.ObjectId.isValid(value), true);\n    var result = new mongodb.ObjectId(value);\n    assert.strictEqual(_typeof(result), 'object');\n    return result;\n  },\n\n  /**\r\n   * Создает новую коллекцию.\r\n   * @param {string} value\r\n   * @return {Promise}\r\n   */\n  createCollection: function createCollection(value) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                assert.strictEqual(_typeof(value), 'string');\n                assert.strictEqual(client.isConnected(), true);\n                _context2.next = 5;\n                return db.createCollection(value);\n\n              case 5:\n                response = _context2.sent;\n                resolve(response);\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                reject(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 9]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Создает новый индекс.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @param {object} options\r\n   * @return {Promise}\r\n   */\n  createIndex: function createIndex(collection, query) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(query), 'object');\n                assert.strictEqual(_typeof(options), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context3.next = 7;\n                return db.collection(collection).createIndex(query, options);\n\n              case 7:\n                response = _context3.sent;\n                resolve(response);\n                _context3.next = 14;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](0);\n                reject(_context3.t0);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 11]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет агрегацию.\r\n   * @param {string} collection\r\n   * @param {Array} pipeline\r\n   * @param {object} options\r\n   * @return {Promise}\r\n   */\n  aggregate: function aggregate(collection, pipeline) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(Array.isArray(pipeline), true);\n                assert.strictEqual(_typeof(options), 'object'); // console.log(pipeline);\n\n                assert.strictEqual(client.isConnected(), true); // https://docs.mongodb.com/manual/reference/method/db.collection.aggregate/\n                // https://mongodb.github.io/node-mongodb-native/2.0/tutorials/aggregation/\n                // http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#aggregate\n                // https://docs.mongodb.com/v4.0/reference/operator/aggregation-pipeline/\n                // https://docs.mongodb.com/v4.0/reference/operator/aggregation/\n                // https://docs.mongodb.com/v4.0/reference/command/aggregate/\n                // https://docs.mongodb.com/manual/core/aggregation-pipeline-limits/#memory-restrictions\n                // Этапы конвейера имеют ограничение в 100 мегабайт оперативной памяти. Если этап превышает этот предел, MongoDB выдаст ошибку. Чтобы разрешить обработку больших наборов данных, используйте параметр allowDiskUse, чтобы разрешить этапам конвейера агрегации записывать данные во временные файлы.\n\n                _context4.next = 7;\n                return db.collection(collection).aggregate(pipeline, options).toArray();\n\n              case 7:\n                response = _context4.sent;\n                resolve(response);\n                _context4.next = 14;\n                break;\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](0);\n                reject(_context4.t0);\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 11]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет единичный поиск.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @return {Promise}\r\n   */\n  findOne: function findOne(collection, query) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(query), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context5.next = 6;\n                return db.collection(collection).findOne(query);\n\n              case 6:\n                response = _context5.sent;\n                resolve(response);\n                _context5.next = 13;\n                break;\n\n              case 10:\n                _context5.prev = 10;\n                _context5.t0 = _context5[\"catch\"](0);\n                reject(_context5.t0);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 10]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет множественный поиск.\r\n   * @param {string} collection\r\n   * @return {Promise}\r\n   */\n  getAll: function getAll(collection) {\n    return new Promise( /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(resolve, reject) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(client.isConnected(), true);\n                _context6.next = 5;\n                return db.collection(collection).find().toArray();\n\n              case 5:\n                response = _context6.sent;\n                resolve(response);\n                _context6.next = 12;\n                break;\n\n              case 9:\n                _context6.prev = 9;\n                _context6.t0 = _context6[\"catch\"](0);\n                reject(_context6.t0);\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 9]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  },\n\n  /**\r\n   * Выполняет единичную вставку.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @return {Promise}\r\n   */\n  insertOne: function insertOne(collection, query) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(query), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context7.next = 6;\n                return db.collection(collection).insertOne(query);\n\n              case 6:\n                response = _context7.sent;\n                resolve(response);\n                _context7.next = 13;\n                break;\n\n              case 10:\n                _context7.prev = 10;\n                _context7.t0 = _context7[\"catch\"](0);\n                reject(_context7.t0);\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 10]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет массовую вставку.\r\n   * @param {string} collection\r\n   * @param {Array} query\r\n   * @return {Promise}\r\n   */\n  insertMany: function insertMany(collection, query) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(query), 'object');\n                assert.strictEqual(Array.isArray(query), true);\n                assert.strictEqual(client.isConnected(), true); // https://docs.mongodb.com/v4.0/reference/method/db.collection.insertMany/\n\n                _context8.next = 7;\n                return db.collection(collection).insertMany(query);\n\n              case 7:\n                response = _context8.sent;\n                resolve(response);\n                _context8.next = 14;\n                break;\n\n              case 11:\n                _context8.prev = 11;\n                _context8.t0 = _context8[\"catch\"](0);\n                reject(_context8.t0);\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 11]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет единичное обновление.\r\n   * @param {string} collection\r\n   * @param {object} filter\r\n   * @param {object} update\r\n   * @param {object} options\r\n   * @return {Promise}\r\n   */\n  updateOne: function updateOne(collection, filter, update) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(filter), 'object');\n                assert.strictEqual(_typeof(update), 'object');\n                assert.strictEqual(_typeof(options), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context9.next = 8;\n                return db.collection(collection).updateOne(filter, update, options);\n\n              case 8:\n                response = _context9.sent;\n                resolve(response);\n                _context9.next = 15;\n                break;\n\n              case 12:\n                _context9.prev = 12;\n                _context9.t0 = _context9[\"catch\"](0);\n                reject(_context9.t0);\n\n              case 15:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[0, 12]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n  * Выполняет множественное обновление.\r\n  * @param {string} collection\r\n  * @param {object} filter\r\n  * @param {object} update\r\n  * @param {object} options\r\n  * @return {Promise}\r\n  */\n  updateMany: function updateMany(collection, filter, update) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(filter), 'object');\n                assert.strictEqual(_typeof(update), 'object');\n                assert.strictEqual(_typeof(options), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context10.next = 8;\n                return db.collection(collection).updateMany(filter, update, options);\n\n              case 8:\n                response = _context10.sent;\n                resolve(response);\n                _context10.next = 15;\n                break;\n\n              case 12:\n                _context10.prev = 12;\n                _context10.t0 = _context10[\"catch\"](0);\n                reject(_context10.t0);\n\n              case 15:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[0, 12]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет единичное удаление.\r\n   * @param {string} collection\r\n   * @param {object} filter\r\n   * @return {Promise}\r\n   */\n  deleteOne: function deleteOne(collection, filter) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(filter), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context11.next = 6;\n                return db.collection(collection).deleteOne(filter);\n\n              case 6:\n                response = _context11.sent;\n                resolve(response);\n                _context11.next = 13;\n                break;\n\n              case 10:\n                _context11.prev = 10;\n                _context11.t0 = _context11[\"catch\"](0);\n                reject(_context11.t0);\n\n              case 13:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[0, 10]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет массовое удаление.\r\n   * @param {string} collection\r\n   * @param {object} filter\r\n   * @return {Promise}\r\n   */\n  deleteMany: function deleteMany(collection, filter) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(filter), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context12.next = 6;\n                return db.collection(collection).deleteMany(filter);\n\n              case 6:\n                response = _context12.sent;\n                resolve(response);\n                _context12.next = 13;\n                break;\n\n              case 10:\n                _context12.prev = 10;\n                _context12.t0 = _context12[\"catch\"](0);\n                reject(_context12.t0);\n\n              case 13:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, null, [[0, 10]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет подсчет документов.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @return {Promise}\r\n   */\n  countDocuments: function countDocuments(collection, query) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(query), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context13.next = 6;\n                return db.collection(collection).countDocuments(query);\n\n              case 6:\n                response = _context13.sent;\n                resolve(response);\n                _context13.next = 13;\n                break;\n\n              case 10:\n                _context13.prev = 10;\n                _context13.t0 = _context13[\"catch\"](0);\n                reject(_context13.t0);\n\n              case 13:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, null, [[0, 10]]);\n      })), 0);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "mongodb.js"
      ],
      "names": [
        "assert",
        "require",
        "mongodb",
        "EventEmitter",
        "config",
        "events",
        "tags",
        "client",
        "db",
        "on",
        "console",
        "log",
        "connection",
        "options",
        "host",
        "port",
        "source",
        "database",
        "username",
        "password",
        "MongoClient",
        "connect",
        "emit",
        "strictEqual",
        "isConnected",
        "error",
        "exception",
        "process",
        "exit",
        "module",
        "exports",
        "id",
        "value",
        "ObjectId",
        "isValid",
        "result",
        "createCollection",
        "Promise",
        "resolve",
        "reject",
        "setTimeout",
        "response",
        "createIndex",
        "collection",
        "query",
        "aggregate",
        "pipeline",
        "Array",
        "isArray",
        "toArray",
        "findOne",
        "getAll",
        "find",
        "insertOne",
        "insertMany",
        "updateOne",
        "filter",
        "update",
        "updateMany",
        "deleteOne",
        "deleteMany",
        "countDocuments"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "sourcesContent": [
        "const assert = require('assert');\r\nconst mongodb = require('mongodb');\r\nconst EventEmitter = require('events');\r\n\r\nconst config = require('../config.json').mongodb;\r\n\r\nconst events = new EventEmitter();\r\nconst tags = { client: 'MongoDB::client', db: 'MongoDB::db' };\r\n\r\nevents.on('created', () => console.log(`${tags.client} created`));\r\nevents.on('connected', () => console.log(`${tags.db} connected`));\r\n\r\nlet client;\r\nlet db;\r\n\r\n// eslint-disable-next-line func-names\r\n(async function () {\r\n    // eslint-disable-next-line no-undef\r\n    const { connection, options } = config;\r\n    const { host, port, source, database, username, password } = connection;\r\n\r\n    client = await mongodb.MongoClient.connect(`mongodb://${username}:${password}@${host}:${port}/?authSource=${source}`, options);\r\n\r\n    events.emit('created');\r\n\r\n    db = client.db(database);\r\n\r\n    assert.strictEqual(typeof client, 'object');\r\n    assert.strictEqual(typeof db, 'object');\r\n    assert.strictEqual(client.isConnected(), true);\r\n\r\n\tevents.emit('connected');\r\n\r\n    db.on('close', error => console.log(`${tags.db} close`, error));\r\n    db.on('error', error => console.log(`${tags.db} error`, error));\r\n    db.on('fullsetup', () => console.log(`${tags.db} fullsetup`));\r\n    db.on('parseError', error => console.log(`${tags.db} parseError`, error));\r\n\tdb.on('reconnect', () => console.log(`${tags.db} reconnect`));\r\n\tdb.on('timeout', error => console.log(`${tags.db} timeout`, error));\r\n}()).catch(exception => {\r\n    console.log(exception);\r\n    process.exit(1);\r\n});\r\n\r\nmodule.exports = {\r\n    events,\r\n\r\n    /**\r\n     * Преобразовывает строку в ObjectID.\r\n     * @param {string} value\r\n     * @return {ObjectId}\r\n     */\r\n\tid: value => {\r\n        assert.strictEqual(typeof value, 'string');\r\n        assert.strictEqual(mongodb.ObjectId.isValid(value), true);\r\n\r\n        const result = new mongodb.ObjectId(value);\r\n\r\n        assert.strictEqual(typeof result, 'object');\r\n\r\n        return result;\r\n    },\r\n\r\n    /**\r\n     * Создает новую коллекцию.\r\n     * @param {string} value\r\n     * @return {Promise}\r\n     */\r\n    createCollection: value => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof value, 'string');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.createCollection(value);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Создает новый индекс.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    createIndex: (collection, query, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).createIndex(query, options);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет агрегацию.\r\n     * @param {string} collection\r\n     * @param {Array} pipeline\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    aggregate: (collection, pipeline, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(Array.isArray(pipeline), true);\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                // console.log(pipeline);\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                // https://docs.mongodb.com/manual/reference/method/db.collection.aggregate/\r\n                // https://mongodb.github.io/node-mongodb-native/2.0/tutorials/aggregation/\r\n                // http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#aggregate\r\n                // https://docs.mongodb.com/v4.0/reference/operator/aggregation-pipeline/\r\n                // https://docs.mongodb.com/v4.0/reference/operator/aggregation/\r\n                // https://docs.mongodb.com/v4.0/reference/command/aggregate/\r\n\r\n                // https://docs.mongodb.com/manual/core/aggregation-pipeline-limits/#memory-restrictions\r\n\r\n                // Этапы конвейера имеют ограничение в 100 мегабайт оперативной памяти. Если этап превышает этот предел, MongoDB выдаст ошибку. Чтобы разрешить обработку больших наборов данных, используйте параметр allowDiskUse, чтобы разрешить этапам конвейера агрегации записывать данные во временные файлы.\r\n\r\n                const response = await db.collection(collection).aggregate(pipeline, options).toArray();\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичный поиск.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @return {Promise}\r\n     */\r\n    findOne: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).findOne(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет множественный поиск.\r\n     * @param {string} collection\r\n     * @return {Promise}\r\n     */\r\n    getAll: (collection) => new Promise(async (resolve, reject) => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).find().toArray();\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичную вставку.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @return {Promise}\r\n     */\r\n    insertOne: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).insertOne(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет массовую вставку.\r\n     * @param {string} collection\r\n     * @param {Array} query\r\n     * @return {Promise}\r\n     */\r\n    insertMany: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(Array.isArray(query), true);\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                // https://docs.mongodb.com/v4.0/reference/method/db.collection.insertMany/\r\n                const response = await db.collection(collection).insertMany(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичное обновление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @param {object} update\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    updateOne: (collection, filter, update, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n                assert.strictEqual(typeof update, 'object');\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).updateOne(filter, update, options);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n        /**\r\n     * Выполняет множественное обновление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @param {object} update\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    updateMany: (collection, filter, update, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n                assert.strictEqual(typeof update, 'object');\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).updateMany(filter, update, options);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичное удаление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @return {Promise}\r\n     */\r\n    deleteOne: (collection, filter) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).deleteOne(filter);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет массовое удаление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @return {Promise}\r\n     */\r\n    deleteMany: (collection, filter) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).deleteMany(filter);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет подсчет документов.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @return {Promise}\r\n     */\r\n    countDocuments: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).countDocuments(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585418714279
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\nodemailer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\nodemailer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\nodemailer.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\nodemailer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
        "sourceFileName": "nodemailer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar nodeMailer = require('nodemailer');\n\nmodule.exports = nodeMailer.createTransport({\n  host: 'smtp-pulse.com',\n  port: 2525,\n  // secure: true,\n  auth: {\n    user: 'timchenkoandrey19@gmail.com',\n    pass: 'KLdaaXEJKcN'\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVtYWlsZXIuanMiXSwibmFtZXMiOlsibm9kZU1haWxlciIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlVHJhbnNwb3J0IiwiaG9zdCIsInBvcnQiLCJhdXRoIiwidXNlciIsInBhc3MiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUExQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxVQUFVLENBQUNJLGVBQVgsQ0FBMkI7QUFDcENDLEVBQUFBLElBQUksRUFBRSxnQkFEOEI7QUFFcENDLEVBQUFBLElBQUksRUFBRSxJQUY4QjtBQUdwQztBQUNBQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsSUFBSSxFQUFFLDZCQURKO0FBRUZDLElBQUFBLElBQUksRUFBRTtBQUZKO0FBSjhCLENBQTNCLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQUhEUllXQVxcRGVza3RvcFxcdmVnZXRhYmxlcy1tYXN0ZXJcXGJhY2tlbmRcXHN5c3RlbXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG5vZGVNYWlsZXIgPSByZXF1aXJlKCdub2RlbWFpbGVyJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG5vZGVNYWlsZXIuY3JlYXRlVHJhbnNwb3J0KHtcclxuICAgICAgICBob3N0OiAnc210cC1wdWxzZS5jb20nLFxyXG4gICAgICAgIHBvcnQ6IDI1MjUsXHJcbiAgICAgICAgLy8gc2VjdXJlOiB0cnVlLFxyXG4gICAgICAgIGF1dGg6IHtcclxuICAgICAgICAgICAgdXNlcjogJ3RpbWNoZW5rb2FuZHJleTE5QGdtYWlsLmNvbScsXHJcbiAgICAgICAgICAgIHBhc3M6ICdLTGRhYVhFSktjTicsXHJcbiAgICAgICAgfSxcclxuICAgIH0pO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "nodemailer.js"
      ],
      "names": [
        "nodeMailer",
        "require",
        "module",
        "exports",
        "createTransport",
        "host",
        "port",
        "auth",
        "user",
        "pass"
      ],
      "mappings": ";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiBH,UAAU,CAACI,eAAX,CAA2B;AACpCC,EAAAA,IAAI,EAAE,gBAD8B;AAEpCC,EAAAA,IAAI,EAAE,IAF8B;AAGpC;AACAC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,6BADJ;AAEFC,IAAAA,IAAI,EAAE;AAFJ;AAJ8B,CAA3B,CAAjB",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "sourcesContent": [
        "const nodeMailer = require('nodemailer');\r\n\r\nmodule.exports = nodeMailer.createTransport({\r\n        host: 'smtp-pulse.com',\r\n        port: 2525,\r\n        // secure: true,\r\n        auth: {\r\n            user: 'timchenkoandrey19@gmail.com',\r\n            pass: 'KLdaaXEJKcN',\r\n        },\r\n    });\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585418713076
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('./express.js');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU8sQ0FBQyxjQUFELENBQVAiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBSERSWVdBXFxEZXNrdG9wXFx2ZWdldGFibGVzLW1hc3RlclxcYmFja2VuZFxcc3RhcnR1cFxcIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9leHByZXNzLmpzJyk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,cAAD,CAAP",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "sourcesContent": [
        "require('./express.js');\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572442689309
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\express.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\express.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\express.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\express.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
        "sourceFileName": "express.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser');\n\nvar cors = require('cors');\n\nvar router = require('../routers/main'); // import './passport';\n// import routers from '../routers';\n\n\nvar app = express(); // const RedisStore = redisStore(session);\n// const redisClient = redis.createClient();\n// const sessionMiddleware = session({\n//     store: new RedisStore({ client: redisClient }),\n//     secret: 'affsafasafs',\n//     resave: true,\n//     rolling: true,\n//     saveUninitialized: false,\n//     cookie: {\n//         path: '/',\n//         maxAge: 60 * 60 * 1000,\n//         httpOnly: false,\n//     },\n// });\n// app.use(cors({\n//     origin: '*',\n//     methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\n//     credentials: true,\n// }));\n// app.use(bodyParser.json());\n// app.use(bodyParser.urlencoded({ extended: true }));\n// app.use(cookieParser());\n// app.use(sessionMiddleware);\n// app.use(passport.initialize());\n// app.use(passport.session());\n\nconsole.log(router); // app.use('/', router);\n// app.use('/admin', routers.admin);\n// app.use('/events', routers.events);\n// app.use('/auth', routers.auth);\n// app.use('/user', routers.user);\n// app.use('/teams', routers.teams);\n// app.use('/projects', routers.projects);\n// app.use('/notifications', routers.notifications);\n// app.use('/portfolio', routers.portfolio);\n// app.use('/profile', routers.profile);\n// app.use('/postal', routers.postal);\n\napp.listen(8000);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4cHJlc3MuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5UGFyc2VyIiwiY29ycyIsInJvdXRlciIsImFwcCIsImNvbnNvbGUiLCJsb2ciLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUEsSUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsaUJBQUQsQ0FBdEIsQyxDQUVBO0FBRUE7OztBQUVBLElBQU1JLEdBQUcsR0FBR0wsT0FBTyxFQUFuQixDLENBRUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUFNLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxNQUFaLEUsQ0FFQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBOztBQUVBQyxHQUFHLENBQUNHLE1BQUosQ0FBVyxJQUFYIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQUhEUllXQVxcRGVza3RvcFxcdmVnZXRhYmxlcy1tYXN0ZXJcXGJhY2tlbmRcXHN0YXJ0dXBcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xyXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xyXG5cclxuY29uc3Qgcm91dGVyID0gcmVxdWlyZSgnLi4vcm91dGVycy9tYWluJyk7XHJcblxyXG4vLyBpbXBvcnQgJy4vcGFzc3BvcnQnO1xyXG5cclxuLy8gaW1wb3J0IHJvdXRlcnMgZnJvbSAnLi4vcm91dGVycyc7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG4vLyBjb25zdCBSZWRpc1N0b3JlID0gcmVkaXNTdG9yZShzZXNzaW9uKTtcclxuXHJcbi8vIGNvbnN0IHJlZGlzQ2xpZW50ID0gcmVkaXMuY3JlYXRlQ2xpZW50KCk7XHJcblxyXG4vLyBjb25zdCBzZXNzaW9uTWlkZGxld2FyZSA9IHNlc3Npb24oe1xyXG4vLyAgICAgc3RvcmU6IG5ldyBSZWRpc1N0b3JlKHsgY2xpZW50OiByZWRpc0NsaWVudCB9KSxcclxuLy8gICAgIHNlY3JldDogJ2FmZnNhZmFzYWZzJyxcclxuLy8gICAgIHJlc2F2ZTogdHJ1ZSxcclxuLy8gICAgIHJvbGxpbmc6IHRydWUsXHJcbi8vICAgICBzYXZlVW5pbml0aWFsaXplZDogZmFsc2UsXHJcbi8vICAgICBjb29raWU6IHtcclxuLy8gICAgICAgICBwYXRoOiAnLycsXHJcbi8vICAgICAgICAgbWF4QWdlOiA2MCAqIDYwICogMTAwMCxcclxuLy8gICAgICAgICBodHRwT25seTogZmFsc2UsXHJcbi8vICAgICB9LFxyXG4vLyB9KTtcclxuXHJcblxyXG4vLyBhcHAudXNlKGNvcnMoe1xyXG4vLyAgICAgb3JpZ2luOiAnKicsXHJcbi8vICAgICBtZXRob2RzOiAnR0VULEhFQUQsUFVULFBBVENILFBPU1QsREVMRVRFLE9QVElPTlMnLFxyXG4vLyAgICAgY3JlZGVudGlhbHM6IHRydWUsXHJcbi8vIH0pKTtcclxuLy8gYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbi8vIGFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xyXG4vLyBhcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcclxuLy8gYXBwLnVzZShzZXNzaW9uTWlkZGxld2FyZSk7XHJcbi8vIGFwcC51c2UocGFzc3BvcnQuaW5pdGlhbGl6ZSgpKTtcclxuLy8gYXBwLnVzZShwYXNzcG9ydC5zZXNzaW9uKCkpO1xyXG5cclxuY29uc29sZS5sb2cocm91dGVyKTtcclxuXHJcbi8vIGFwcC51c2UoJy8nLCByb3V0ZXIpO1xyXG5cclxuLy8gYXBwLnVzZSgnL2FkbWluJywgcm91dGVycy5hZG1pbik7XHJcblxyXG4vLyBhcHAudXNlKCcvZXZlbnRzJywgcm91dGVycy5ldmVudHMpO1xyXG5cclxuLy8gYXBwLnVzZSgnL2F1dGgnLCByb3V0ZXJzLmF1dGgpO1xyXG5cclxuLy8gYXBwLnVzZSgnL3VzZXInLCByb3V0ZXJzLnVzZXIpO1xyXG5cclxuLy8gYXBwLnVzZSgnL3RlYW1zJywgcm91dGVycy50ZWFtcyk7XHJcblxyXG4vLyBhcHAudXNlKCcvcHJvamVjdHMnLCByb3V0ZXJzLnByb2plY3RzKTtcclxuXHJcbi8vIGFwcC51c2UoJy9ub3RpZmljYXRpb25zJywgcm91dGVycy5ub3RpZmljYXRpb25zKTtcclxuXHJcbi8vIGFwcC51c2UoJy9wb3J0Zm9saW8nLCByb3V0ZXJzLnBvcnRmb2xpbyk7XHJcblxyXG4vLyBhcHAudXNlKCcvcHJvZmlsZScsIHJvdXRlcnMucHJvZmlsZSk7XHJcblxyXG4vLyBhcHAudXNlKCcvcG9zdGFsJywgcm91dGVycy5wb3N0YWwpO1xyXG5cclxuYXBwLmxpc3Rlbig4MDAwKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "express.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "cors",
        "router",
        "app",
        "console",
        "log",
        "listen"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMG,MAAM,GAAGH,OAAO,CAAC,iBAAD,CAAtB,C,CAEA;AAEA;;;AAEA,IAAMI,GAAG,GAAGL,OAAO,EAAnB,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAM,OAAO,CAACC,GAAR,CAAYH,MAAZ,E,CAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;AAEAC,GAAG,CAACG,MAAJ,CAAW,IAAX",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\n\r\nconst router = require('../routers/main');\r\n\r\n// import './passport';\r\n\r\n// import routers from '../routers';\r\n\r\nconst app = express();\r\n\r\n// const RedisStore = redisStore(session);\r\n\r\n// const redisClient = redis.createClient();\r\n\r\n// const sessionMiddleware = session({\r\n//     store: new RedisStore({ client: redisClient }),\r\n//     secret: 'affsafasafs',\r\n//     resave: true,\r\n//     rolling: true,\r\n//     saveUninitialized: false,\r\n//     cookie: {\r\n//         path: '/',\r\n//         maxAge: 60 * 60 * 1000,\r\n//         httpOnly: false,\r\n//     },\r\n// });\r\n\r\n\r\n// app.use(cors({\r\n//     origin: '*',\r\n//     methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\r\n//     credentials: true,\r\n// }));\r\n// app.use(bodyParser.json());\r\n// app.use(bodyParser.urlencoded({ extended: true }));\r\n// app.use(cookieParser());\r\n// app.use(sessionMiddleware);\r\n// app.use(passport.initialize());\r\n// app.use(passport.session());\r\n\r\nconsole.log(router);\r\n\r\n// app.use('/', router);\r\n\r\n// app.use('/admin', routers.admin);\r\n\r\n// app.use('/events', routers.events);\r\n\r\n// app.use('/auth', routers.auth);\r\n\r\n// app.use('/user', routers.user);\r\n\r\n// app.use('/teams', routers.teams);\r\n\r\n// app.use('/projects', routers.projects);\r\n\r\n// app.use('/notifications', routers.notifications);\r\n\r\n// app.use('/portfolio', routers.portfolio);\r\n\r\n// app.use('/profile', routers.profile);\r\n\r\n// app.use('/postal', routers.postal);\r\n\r\napp.listen(8000);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585420781264
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\routers\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\routers\\\\main.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\main.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\main.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\",
        "sourceFileName": "main.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar injector = require('../modules/injector');\n\nvar router = express.Router(); // router.use((req, res, next) => next());\n\nrouter.get('/', function (req, res) {\n  res.send(injector());\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJpbmplY3RvciIsInJvdXRlciIsIlJvdXRlciIsImdldCIsInJlcSIsInJlcyIsInNlbmQiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxJQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxxQkFBRCxDQUF4Qjs7QUFFQSxJQUFNRSxNQUFNLEdBQUdILE9BQU8sQ0FBQ0ksTUFBUixFQUFmLEMsQ0FFQTs7QUFFQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFpQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMzQkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVNOLFFBQVEsRUFBakI7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQUhEUllXQVxcRGVza3RvcFxcdmVnZXRhYmxlcy1tYXN0ZXJcXGJhY2tlbmRcXHJvdXRlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcblxyXG5jb25zdCBpbmplY3RvciA9IHJlcXVpcmUoJy4uL21vZHVsZXMvaW5qZWN0b3InKTtcclxuXHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG4vLyByb3V0ZXIudXNlKChyZXEsIHJlcywgbmV4dCkgPT4gbmV4dCgpKTtcclxuXHJcbnJvdXRlci5nZXQoJy8nLCAgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc2VuZChpbmplY3RvcigpKTtcclxufSk7XHJcblxyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "express",
        "require",
        "injector",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "send"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AAEA,IAAME,MAAM,GAAGH,OAAO,CAACI,MAAR,EAAf,C,CAEA;;AAEAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BA,EAAAA,GAAG,CAACC,IAAJ,CAASN,QAAQ,EAAjB;AACH,CAFD",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\",
      "sourcesContent": [
        "const express = require('express');\r\n\r\nconst injector = require('../modules/injector');\r\n\r\nconst router = express.Router();\r\n\r\n// router.use((req, res, next) => next());\r\n\r\nrouter.get('/',  (req, res) => {\r\n    res.send(injector());\r\n});\r\n\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585420760930
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\modules\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\modules\\\\injector.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\injector.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\injector.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\injector.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\",
        "sourceFileName": "injector.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar React = require('react');\n\nvar _require = require('react-dom/server'),\n    renderToString = _require.renderToString; // const { StaticRouter } = require('react-router-dom');\n// const { renderRoutes } = require('react-router-config');\n// const { Provider } = require('react-redux');\n\n\nvar Test = require('../../frontend/src/App'); // import Routes from '../../frontend/routes/routes';\n// import store from '../../frontend/redux/store';\n\n\nmodule.exports = function injector(location) {\n  try {\n    var content = renderToString(Test);\n    var dir = path.resolve(__dirname, './index.html');\n    var data = fs.readFileSync(dir, 'utf8');\n    data = data.replace('<div id=\"root\"></div>', \"<div id=\\\"root\\\">\".concat(content, \"</div>\"));\n    return data;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluamVjdG9yLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJSZWFjdCIsInJlbmRlclRvU3RyaW5nIiwiVGVzdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJpbmplY3RvciIsImxvY2F0aW9uIiwiY29udGVudCIsImRpciIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJkYXRhIiwicmVhZEZpbGVTeW5jIiwicmVwbGFjZSIsImVyciIsImNvbnNvbGUiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFyQjs7ZUFDMkJBLE9BQU8sQ0FBQyxrQkFBRCxDO0lBQTFCRyxjLFlBQUFBLGMsRUFDUjtBQUNBO0FBQ0E7OztBQUVBLElBQU1DLElBQUksR0FBR0osT0FBTyxDQUFDLHdCQUFELENBQXBCLEMsQ0FFQTtBQUNBOzs7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLFFBQVQsQ0FBa0JDLFFBQWxCLEVBQTRCO0FBQ3pDLE1BQUk7QUFDQSxRQUFNQyxPQUFPLEdBQUdOLGNBQWMsQ0FBQ0MsSUFBRCxDQUE5QjtBQUVBLFFBQU1NLEdBQUcsR0FBR1QsSUFBSSxDQUFDVSxPQUFMLENBQWFDLFNBQWIsRUFBd0IsY0FBeEIsQ0FBWjtBQUVBLFFBQUlDLElBQUksR0FBR2QsRUFBRSxDQUFDZSxZQUFILENBQWdCSixHQUFoQixFQUFxQixNQUFyQixDQUFYO0FBRUFHLElBQUFBLElBQUksR0FBR0EsSUFBSSxDQUFDRSxPQUFMLENBQWEsdUJBQWIsNkJBQXdETixPQUF4RCxZQUFQO0FBRUEsV0FBT0ksSUFBUDtBQUNILEdBVkQsQ0FVRSxPQUFNRyxHQUFOLEVBQVc7QUFDVEMsSUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWNGLEdBQWQ7QUFFQSxXQUFPLElBQVA7QUFDSDtBQUNKLENBaEJEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQUhEUllXQVxcRGVza3RvcFxcdmVnZXRhYmxlcy1tYXN0ZXJcXGJhY2tlbmRcXG1vZHVsZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcclxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcclxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG5jb25zdCB7IHJlbmRlclRvU3RyaW5nIH0gPSByZXF1aXJlKCdyZWFjdC1kb20vc2VydmVyJyk7XHJcbi8vIGNvbnN0IHsgU3RhdGljUm91dGVyIH0gPSByZXF1aXJlKCdyZWFjdC1yb3V0ZXItZG9tJyk7XHJcbi8vIGNvbnN0IHsgcmVuZGVyUm91dGVzIH0gPSByZXF1aXJlKCdyZWFjdC1yb3V0ZXItY29uZmlnJyk7XHJcbi8vIGNvbnN0IHsgUHJvdmlkZXIgfSA9IHJlcXVpcmUoJ3JlYWN0LXJlZHV4Jyk7XHJcblxyXG5jb25zdCBUZXN0ID0gcmVxdWlyZSgnLi4vLi4vZnJvbnRlbmQvc3JjL0FwcCcpO1xyXG5cclxuLy8gaW1wb3J0IFJvdXRlcyBmcm9tICcuLi8uLi9mcm9udGVuZC9yb3V0ZXMvcm91dGVzJztcclxuLy8gaW1wb3J0IHN0b3JlIGZyb20gJy4uLy4uL2Zyb250ZW5kL3JlZHV4L3N0b3JlJztcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5qZWN0b3IobG9jYXRpb24pIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY29udGVudCA9IHJlbmRlclRvU3RyaW5nKFRlc3QpO1xyXG5cclxuICAgICAgICBjb25zdCBkaXIgPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi9pbmRleC5odG1sJyk7XHJcblxyXG4gICAgICAgIGxldCBkYXRhID0gZnMucmVhZEZpbGVTeW5jKGRpciwgJ3V0ZjgnKTtcclxuXHJcbiAgICAgICAgZGF0YSA9IGRhdGEucmVwbGFjZSgnPGRpdiBpZD1cInJvb3RcIj48L2Rpdj4nLCBgPGRpdiBpZD1cInJvb3RcIj4ke2NvbnRlbnR9PC9kaXY+YCk7XHJcblxyXG4gICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfSBjYXRjaChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcblxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "injector.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "React",
        "renderToString",
        "Test",
        "module",
        "exports",
        "injector",
        "location",
        "content",
        "dir",
        "resolve",
        "__dirname",
        "data",
        "readFileSync",
        "replace",
        "err",
        "console",
        "error"
      ],
      "mappings": ";;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;eAC2BA,OAAO,CAAC,kBAAD,C;IAA1BG,c,YAAAA,c,EACR;AACA;AACA;;;AAEA,IAAMC,IAAI,GAAGJ,OAAO,CAAC,wBAAD,CAApB,C,CAEA;AACA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AACzC,MAAI;AACA,QAAMC,OAAO,GAAGN,cAAc,CAACC,IAAD,CAA9B;AAEA,QAAMM,GAAG,GAAGT,IAAI,CAACU,OAAL,CAAaC,SAAb,EAAwB,cAAxB,CAAZ;AAEA,QAAIC,IAAI,GAAGd,EAAE,CAACe,YAAH,CAAgBJ,GAAhB,EAAqB,MAArB,CAAX;AAEAG,IAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,uBAAb,6BAAwDN,OAAxD,YAAP;AAEA,WAAOI,IAAP;AACH,GAVD,CAUE,OAAMG,GAAN,EAAW;AACTC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AAEA,WAAO,IAAP;AACH;AACJ,CAhBD",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\",
      "sourcesContent": [
        "const fs = require('fs');\r\nconst path = require('path');\r\nconst React = require('react');\r\nconst { renderToString } = require('react-dom/server');\r\n// const { StaticRouter } = require('react-router-dom');\r\n// const { renderRoutes } = require('react-router-config');\r\n// const { Provider } = require('react-redux');\r\n\r\nconst Test = require('../../frontend/src/App');\r\n\r\n// import Routes from '../../frontend/routes/routes';\r\n// import store from '../../frontend/redux/store';\r\n\r\nmodule.exports = function injector(location) {\r\n    try {\r\n        const content = renderToString(Test);\r\n\r\n        const dir = path.resolve(__dirname, './index.html');\r\n\r\n        let data = fs.readFileSync(dir, 'utf8');\r\n\r\n        data = data.replace('<div id=\"root\"></div>', `<div id=\"root\">${content}</div>`);\r\n\r\n        return data;\r\n    } catch(err) {\r\n        console.error(err);\r\n\r\n        return null;\r\n    }\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585418814346
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\index.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('./express.js');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU8sQ0FBQyxjQUFELENBQVAiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBSERSWVdBXFxEZXNrdG9wXFx2ZWdldGFibGVzLW1hc3RlclxcYmFja2VuZFxcc3RhcnR1cFxcIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9leHByZXNzLmpzJyk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,cAAD,CAAP",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "sourcesContent": [
        "require('./express.js');\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572442689309
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\startup\\\\express.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\express.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\express.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\express.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
        "sourceFileName": "express.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser');\n\nvar cors = require('cors');\n\nvar router = require('../routers/main'); // import './passport';\n// import routers from '../routers';\n\n\nvar app = express(); // const RedisStore = redisStore(session);\n// const redisClient = redis.createClient();\n// const sessionMiddleware = session({\n//     store: new RedisStore({ client: redisClient }),\n//     secret: 'affsafasafs',\n//     resave: true,\n//     rolling: true,\n//     saveUninitialized: false,\n//     cookie: {\n//         path: '/',\n//         maxAge: 60 * 60 * 1000,\n//         httpOnly: false,\n//     },\n// });\n// app.use(cors({\n//     origin: '*',\n//     methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\n//     credentials: true,\n// }));\n// app.use(bodyParser.json());\n// app.use(bodyParser.urlencoded({ extended: true }));\n// app.use(cookieParser());\n// app.use(sessionMiddleware);\n// app.use(passport.initialize());\n// app.use(passport.session());\n\nconsole.log(router); // app.use('/', router);\n// app.use('/admin', routers.admin);\n// app.use('/events', routers.events);\n// app.use('/auth', routers.auth);\n// app.use('/user', routers.user);\n// app.use('/teams', routers.teams);\n// app.use('/projects', routers.projects);\n// app.use('/notifications', routers.notifications);\n// app.use('/portfolio', routers.portfolio);\n// app.use('/profile', routers.profile);\n// app.use('/postal', routers.postal);\n\napp.listen(8000);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4cHJlc3MuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJib2R5UGFyc2VyIiwiY29ycyIsInJvdXRlciIsImFwcCIsImNvbnNvbGUiLCJsb2ciLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUEsSUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsaUJBQUQsQ0FBdEIsQyxDQUVBO0FBRUE7OztBQUVBLElBQU1JLEdBQUcsR0FBR0wsT0FBTyxFQUFuQixDLENBRUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUFNLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxNQUFaLEUsQ0FFQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBOztBQUVBQyxHQUFHLENBQUNHLE1BQUosQ0FBVyxJQUFYIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQUhEUllXQVxcRGVza3RvcFxcdmVnZXRhYmxlcy1tYXN0ZXJcXGJhY2tlbmRcXHN0YXJ0dXBcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xyXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xyXG5cclxuY29uc3Qgcm91dGVyID0gcmVxdWlyZSgnLi4vcm91dGVycy9tYWluJyk7XHJcblxyXG4vLyBpbXBvcnQgJy4vcGFzc3BvcnQnO1xyXG5cclxuLy8gaW1wb3J0IHJvdXRlcnMgZnJvbSAnLi4vcm91dGVycyc7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG4vLyBjb25zdCBSZWRpc1N0b3JlID0gcmVkaXNTdG9yZShzZXNzaW9uKTtcclxuXHJcbi8vIGNvbnN0IHJlZGlzQ2xpZW50ID0gcmVkaXMuY3JlYXRlQ2xpZW50KCk7XHJcblxyXG4vLyBjb25zdCBzZXNzaW9uTWlkZGxld2FyZSA9IHNlc3Npb24oe1xyXG4vLyAgICAgc3RvcmU6IG5ldyBSZWRpc1N0b3JlKHsgY2xpZW50OiByZWRpc0NsaWVudCB9KSxcclxuLy8gICAgIHNlY3JldDogJ2FmZnNhZmFzYWZzJyxcclxuLy8gICAgIHJlc2F2ZTogdHJ1ZSxcclxuLy8gICAgIHJvbGxpbmc6IHRydWUsXHJcbi8vICAgICBzYXZlVW5pbml0aWFsaXplZDogZmFsc2UsXHJcbi8vICAgICBjb29raWU6IHtcclxuLy8gICAgICAgICBwYXRoOiAnLycsXHJcbi8vICAgICAgICAgbWF4QWdlOiA2MCAqIDYwICogMTAwMCxcclxuLy8gICAgICAgICBodHRwT25seTogZmFsc2UsXHJcbi8vICAgICB9LFxyXG4vLyB9KTtcclxuXHJcblxyXG4vLyBhcHAudXNlKGNvcnMoe1xyXG4vLyAgICAgb3JpZ2luOiAnKicsXHJcbi8vICAgICBtZXRob2RzOiAnR0VULEhFQUQsUFVULFBBVENILFBPU1QsREVMRVRFLE9QVElPTlMnLFxyXG4vLyAgICAgY3JlZGVudGlhbHM6IHRydWUsXHJcbi8vIH0pKTtcclxuLy8gYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbi8vIGFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xyXG4vLyBhcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcclxuLy8gYXBwLnVzZShzZXNzaW9uTWlkZGxld2FyZSk7XHJcbi8vIGFwcC51c2UocGFzc3BvcnQuaW5pdGlhbGl6ZSgpKTtcclxuLy8gYXBwLnVzZShwYXNzcG9ydC5zZXNzaW9uKCkpO1xyXG5cclxuY29uc29sZS5sb2cocm91dGVyKTtcclxuXHJcbi8vIGFwcC51c2UoJy8nLCByb3V0ZXIpO1xyXG5cclxuLy8gYXBwLnVzZSgnL2FkbWluJywgcm91dGVycy5hZG1pbik7XHJcblxyXG4vLyBhcHAudXNlKCcvZXZlbnRzJywgcm91dGVycy5ldmVudHMpO1xyXG5cclxuLy8gYXBwLnVzZSgnL2F1dGgnLCByb3V0ZXJzLmF1dGgpO1xyXG5cclxuLy8gYXBwLnVzZSgnL3VzZXInLCByb3V0ZXJzLnVzZXIpO1xyXG5cclxuLy8gYXBwLnVzZSgnL3RlYW1zJywgcm91dGVycy50ZWFtcyk7XHJcblxyXG4vLyBhcHAudXNlKCcvcHJvamVjdHMnLCByb3V0ZXJzLnByb2plY3RzKTtcclxuXHJcbi8vIGFwcC51c2UoJy9ub3RpZmljYXRpb25zJywgcm91dGVycy5ub3RpZmljYXRpb25zKTtcclxuXHJcbi8vIGFwcC51c2UoJy9wb3J0Zm9saW8nLCByb3V0ZXJzLnBvcnRmb2xpbyk7XHJcblxyXG4vLyBhcHAudXNlKCcvcHJvZmlsZScsIHJvdXRlcnMucHJvZmlsZSk7XHJcblxyXG4vLyBhcHAudXNlKCcvcG9zdGFsJywgcm91dGVycy5wb3N0YWwpO1xyXG5cclxuYXBwLmxpc3Rlbig4MDAwKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "express.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "cors",
        "router",
        "app",
        "console",
        "log",
        "listen"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMG,MAAM,GAAGH,OAAO,CAAC,iBAAD,CAAtB,C,CAEA;AAEA;;;AAEA,IAAMI,GAAG,GAAGL,OAAO,EAAnB,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAM,OAAO,CAACC,GAAR,CAAYH,MAAZ,E,CAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;AAEAC,GAAG,CAACG,MAAJ,CAAW,IAAX",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\startup\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\n\r\nconst router = require('../routers/main');\r\n\r\n// import './passport';\r\n\r\n// import routers from '../routers';\r\n\r\nconst app = express();\r\n\r\n// const RedisStore = redisStore(session);\r\n\r\n// const redisClient = redis.createClient();\r\n\r\n// const sessionMiddleware = session({\r\n//     store: new RedisStore({ client: redisClient }),\r\n//     secret: 'affsafasafs',\r\n//     resave: true,\r\n//     rolling: true,\r\n//     saveUninitialized: false,\r\n//     cookie: {\r\n//         path: '/',\r\n//         maxAge: 60 * 60 * 1000,\r\n//         httpOnly: false,\r\n//     },\r\n// });\r\n\r\n\r\n// app.use(cors({\r\n//     origin: '*',\r\n//     methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\r\n//     credentials: true,\r\n// }));\r\n// app.use(bodyParser.json());\r\n// app.use(bodyParser.urlencoded({ extended: true }));\r\n// app.use(cookieParser());\r\n// app.use(sessionMiddleware);\r\n// app.use(passport.initialize());\r\n// app.use(passport.session());\r\n\r\nconsole.log(router);\r\n\r\n// app.use('/', router);\r\n\r\n// app.use('/admin', routers.admin);\r\n\r\n// app.use('/events', routers.events);\r\n\r\n// app.use('/auth', routers.auth);\r\n\r\n// app.use('/user', routers.user);\r\n\r\n// app.use('/teams', routers.teams);\r\n\r\n// app.use('/projects', routers.projects);\r\n\r\n// app.use('/notifications', routers.notifications);\r\n\r\n// app.use('/portfolio', routers.portfolio);\r\n\r\n// app.use('/profile', routers.profile);\r\n\r\n// app.use('/postal', routers.postal);\r\n\r\napp.listen(8000);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585420781264
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\routers\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\routers\\\\main.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\main.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\main.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\",
        "sourceFileName": "main.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar injector = require('../modules/injector');\n\nvar router = express.Router(); // router.use((req, res, next) => next());\n\nrouter.get('/', function (req, res) {\n  res.send(injector());\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJpbmplY3RvciIsInJvdXRlciIsIlJvdXRlciIsImdldCIsInJlcSIsInJlcyIsInNlbmQiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxJQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxxQkFBRCxDQUF4Qjs7QUFFQSxJQUFNRSxNQUFNLEdBQUdILE9BQU8sQ0FBQ0ksTUFBUixFQUFmLEMsQ0FFQTs7QUFFQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFpQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMzQkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVNOLFFBQVEsRUFBakI7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQUhEUllXQVxcRGVza3RvcFxcdmVnZXRhYmxlcy1tYXN0ZXJcXGJhY2tlbmRcXHJvdXRlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcblxyXG5jb25zdCBpbmplY3RvciA9IHJlcXVpcmUoJy4uL21vZHVsZXMvaW5qZWN0b3InKTtcclxuXHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG4vLyByb3V0ZXIudXNlKChyZXEsIHJlcywgbmV4dCkgPT4gbmV4dCgpKTtcclxuXHJcbnJvdXRlci5nZXQoJy8nLCAgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc2VuZChpbmplY3RvcigpKTtcclxufSk7XHJcblxyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "express",
        "require",
        "injector",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "send"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AAEA,IAAME,MAAM,GAAGH,OAAO,CAACI,MAAR,EAAf,C,CAEA;;AAEAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BA,EAAAA,GAAG,CAACC,IAAJ,CAASN,QAAQ,EAAjB;AACH,CAFD",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\routers\\",
      "sourcesContent": [
        "const express = require('express');\r\n\r\nconst injector = require('../modules/injector');\r\n\r\nconst router = express.Router();\r\n\r\n// router.use((req, res, next) => next());\r\n\r\nrouter.get('/',  (req, res) => {\r\n    res.send(injector());\r\n});\r\n\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585420760930
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\modules\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\modules\\\\injector.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\injector.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\injector.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\injector.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\",
        "sourceFileName": "injector.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar React = require('react');\n\nvar _require = require('react-dom/server'),\n    renderToString = _require.renderToString; // const { StaticRouter } = require('react-router-dom');\n// const { renderRoutes } = require('react-router-config');\n// const { Provider } = require('react-redux');\n\n\nvar Test = require('../../frontend/src/App'); // import Routes from '../../frontend/routes/routes';\n// import store from '../../frontend/redux/store';\n\n\nmodule.exports = function injector(location) {\n  try {\n    var content = renderToString(Test);\n    var dir = path.resolve(__dirname, './index.html');\n    var data = fs.readFileSync(dir, 'utf8');\n    data = data.replace('<div id=\"root\"></div>', \"<div id=\\\"root\\\">\".concat(content, \"</div>\"));\n    return data;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluamVjdG9yLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJSZWFjdCIsInJlbmRlclRvU3RyaW5nIiwiVGVzdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJpbmplY3RvciIsImxvY2F0aW9uIiwiY29udGVudCIsImRpciIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJkYXRhIiwicmVhZEZpbGVTeW5jIiwicmVwbGFjZSIsImVyciIsImNvbnNvbGUiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFyQjs7ZUFDMkJBLE9BQU8sQ0FBQyxrQkFBRCxDO0lBQTFCRyxjLFlBQUFBLGMsRUFDUjtBQUNBO0FBQ0E7OztBQUVBLElBQU1DLElBQUksR0FBR0osT0FBTyxDQUFDLHdCQUFELENBQXBCLEMsQ0FFQTtBQUNBOzs7QUFFQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLFFBQVQsQ0FBa0JDLFFBQWxCLEVBQTRCO0FBQ3pDLE1BQUk7QUFDQSxRQUFNQyxPQUFPLEdBQUdOLGNBQWMsQ0FBQ0MsSUFBRCxDQUE5QjtBQUVBLFFBQU1NLEdBQUcsR0FBR1QsSUFBSSxDQUFDVSxPQUFMLENBQWFDLFNBQWIsRUFBd0IsY0FBeEIsQ0FBWjtBQUVBLFFBQUlDLElBQUksR0FBR2QsRUFBRSxDQUFDZSxZQUFILENBQWdCSixHQUFoQixFQUFxQixNQUFyQixDQUFYO0FBRUFHLElBQUFBLElBQUksR0FBR0EsSUFBSSxDQUFDRSxPQUFMLENBQWEsdUJBQWIsNkJBQXdETixPQUF4RCxZQUFQO0FBRUEsV0FBT0ksSUFBUDtBQUNILEdBVkQsQ0FVRSxPQUFNRyxHQUFOLEVBQVc7QUFDVEMsSUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWNGLEdBQWQ7QUFFQSxXQUFPLElBQVA7QUFDSDtBQUNKLENBaEJEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQUhEUllXQVxcRGVza3RvcFxcdmVnZXRhYmxlcy1tYXN0ZXJcXGJhY2tlbmRcXG1vZHVsZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcclxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcclxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG5jb25zdCB7IHJlbmRlclRvU3RyaW5nIH0gPSByZXF1aXJlKCdyZWFjdC1kb20vc2VydmVyJyk7XHJcbi8vIGNvbnN0IHsgU3RhdGljUm91dGVyIH0gPSByZXF1aXJlKCdyZWFjdC1yb3V0ZXItZG9tJyk7XHJcbi8vIGNvbnN0IHsgcmVuZGVyUm91dGVzIH0gPSByZXF1aXJlKCdyZWFjdC1yb3V0ZXItY29uZmlnJyk7XHJcbi8vIGNvbnN0IHsgUHJvdmlkZXIgfSA9IHJlcXVpcmUoJ3JlYWN0LXJlZHV4Jyk7XHJcblxyXG5jb25zdCBUZXN0ID0gcmVxdWlyZSgnLi4vLi4vZnJvbnRlbmQvc3JjL0FwcCcpO1xyXG5cclxuLy8gaW1wb3J0IFJvdXRlcyBmcm9tICcuLi8uLi9mcm9udGVuZC9yb3V0ZXMvcm91dGVzJztcclxuLy8gaW1wb3J0IHN0b3JlIGZyb20gJy4uLy4uL2Zyb250ZW5kL3JlZHV4L3N0b3JlJztcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5qZWN0b3IobG9jYXRpb24pIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY29udGVudCA9IHJlbmRlclRvU3RyaW5nKFRlc3QpO1xyXG5cclxuICAgICAgICBjb25zdCBkaXIgPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi9pbmRleC5odG1sJyk7XHJcblxyXG4gICAgICAgIGxldCBkYXRhID0gZnMucmVhZEZpbGVTeW5jKGRpciwgJ3V0ZjgnKTtcclxuXHJcbiAgICAgICAgZGF0YSA9IGRhdGEucmVwbGFjZSgnPGRpdiBpZD1cInJvb3RcIj48L2Rpdj4nLCBgPGRpdiBpZD1cInJvb3RcIj4ke2NvbnRlbnR9PC9kaXY+YCk7XHJcblxyXG4gICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfSBjYXRjaChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcblxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "injector.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "React",
        "renderToString",
        "Test",
        "module",
        "exports",
        "injector",
        "location",
        "content",
        "dir",
        "resolve",
        "__dirname",
        "data",
        "readFileSync",
        "replace",
        "err",
        "console",
        "error"
      ],
      "mappings": ";;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;eAC2BA,OAAO,CAAC,kBAAD,C;IAA1BG,c,YAAAA,c,EACR;AACA;AACA;;;AAEA,IAAMC,IAAI,GAAGJ,OAAO,CAAC,wBAAD,CAApB,C,CAEA;AACA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AACzC,MAAI;AACA,QAAMC,OAAO,GAAGN,cAAc,CAACC,IAAD,CAA9B;AAEA,QAAMM,GAAG,GAAGT,IAAI,CAACU,OAAL,CAAaC,SAAb,EAAwB,cAAxB,CAAZ;AAEA,QAAIC,IAAI,GAAGd,EAAE,CAACe,YAAH,CAAgBJ,GAAhB,EAAqB,MAArB,CAAX;AAEAG,IAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,uBAAb,6BAAwDN,OAAxD,YAAP;AAEA,WAAOI,IAAP;AACH,GAVD,CAUE,OAAMG,GAAN,EAAW;AACTC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AAEA,WAAO,IAAP;AACH;AACJ,CAhBD",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\modules\\",
      "sourcesContent": [
        "const fs = require('fs');\r\nconst path = require('path');\r\nconst React = require('react');\r\nconst { renderToString } = require('react-dom/server');\r\n// const { StaticRouter } = require('react-router-dom');\r\n// const { renderRoutes } = require('react-router-config');\r\n// const { Provider } = require('react-redux');\r\n\r\nconst Test = require('../../frontend/src/App');\r\n\r\n// import Routes from '../../frontend/routes/routes';\r\n// import store from '../../frontend/redux/store';\r\n\r\nmodule.exports = function injector(location) {\r\n    try {\r\n        const content = renderToString(Test);\r\n\r\n        const dir = path.resolve(__dirname, './index.html');\r\n\r\n        let data = fs.readFileSync(dir, 'utf8');\r\n\r\n        data = data.replace('<div id=\"root\"></div>', `<div id=\"root\">${content}</div>`);\r\n\r\n        return data;\r\n    } catch(err) {\r\n        console.error(err);\r\n\r\n        return null;\r\n    }\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585418814346
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\index.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongodb = require('./mongodb');\n\nrequire('./nodemailer');\n\nglobal.mongodb = mongodb;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvZGIiLCJyZXF1aXJlIiwiZ2xvYmFsIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBQ0FBLE9BQU8sQ0FBQyxjQUFELENBQVA7O0FBRUFDLE1BQU0sQ0FBQ0YsT0FBUCxHQUFpQkEsT0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBSERSWVdBXFxEZXNrdG9wXFx2ZWdldGFibGVzLW1hc3RlclxcYmFja2VuZFxcc3lzdGVtc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29kYiA9IHJlcXVpcmUoJy4vbW9uZ29kYicpO1xyXG5yZXF1aXJlKCcuL25vZGVtYWlsZXInKTtcclxuXHJcbmdsb2JhbC5tb25nb2RiID0gbW9uZ29kYjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongodb",
        "require",
        "global"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACAA,OAAO,CAAC,cAAD,CAAP;;AAEAC,MAAM,CAACF,OAAP,GAAiBA,OAAjB",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "sourcesContent": [
        "const mongodb = require('./mongodb');\r\nrequire('./nodemailer');\r\n\r\nglobal.mongodb = mongodb;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585418711504
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\mongodb.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\mongodb.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\mongodb.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\mongodb.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
        "sourceFileName": "mongodb.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar assert = require('assert');\n\nvar mongodb = require('mongodb');\n\nvar EventEmitter = require('events');\n\nvar config = require('../config.json').mongodb;\n\nvar events = new EventEmitter();\nvar tags = {\n  client: 'MongoDB::client',\n  db: 'MongoDB::db'\n};\nevents.on('created', function () {\n  return console.log(\"\".concat(tags.client, \" created\"));\n});\nevents.on('connected', function () {\n  return console.log(\"\".concat(tags.db, \" connected\"));\n});\nvar client;\nvar db; // eslint-disable-next-line func-names\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var connection, options, host, port, source, database, username, password;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // eslint-disable-next-line no-undef\n          connection = config.connection, options = config.options;\n          host = connection.host, port = connection.port, source = connection.source, database = connection.database, username = connection.username, password = connection.password;\n          _context.next = 4;\n          return mongodb.MongoClient.connect(\"mongodb://\".concat(username, \":\").concat(password, \"@\").concat(host, \":\").concat(port, \"/?authSource=\").concat(source), options);\n\n        case 4:\n          client = _context.sent;\n          events.emit('created');\n          db = client.db(database);\n          assert.strictEqual(_typeof(client), 'object');\n          assert.strictEqual(_typeof(db), 'object');\n          assert.strictEqual(client.isConnected(), true);\n          events.emit('connected');\n          db.on('close', function (error) {\n            return console.log(\"\".concat(tags.db, \" close\"), error);\n          });\n          db.on('error', function (error) {\n            return console.log(\"\".concat(tags.db, \" error\"), error);\n          });\n          db.on('fullsetup', function () {\n            return console.log(\"\".concat(tags.db, \" fullsetup\"));\n          });\n          db.on('parseError', function (error) {\n            return console.log(\"\".concat(tags.db, \" parseError\"), error);\n          });\n          db.on('reconnect', function () {\n            return console.log(\"\".concat(tags.db, \" reconnect\"));\n          });\n          db.on('timeout', function (error) {\n            return console.log(\"\".concat(tags.db, \" timeout\"), error);\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))()[\"catch\"](function (exception) {\n  console.log(exception);\n  process.exit(1);\n});\n\nmodule.exports = {\n  events: events,\n\n  /**\r\n   * Преобразовывает строку в ObjectID.\r\n   * @param {string} value\r\n   * @return {ObjectId}\r\n   */\n  id: function id(value) {\n    assert.strictEqual(_typeof(value), 'string');\n    assert.strictEqual(mongodb.ObjectId.isValid(value), true);\n    var result = new mongodb.ObjectId(value);\n    assert.strictEqual(_typeof(result), 'object');\n    return result;\n  },\n\n  /**\r\n   * Создает новую коллекцию.\r\n   * @param {string} value\r\n   * @return {Promise}\r\n   */\n  createCollection: function createCollection(value) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                assert.strictEqual(_typeof(value), 'string');\n                assert.strictEqual(client.isConnected(), true);\n                _context2.next = 5;\n                return db.createCollection(value);\n\n              case 5:\n                response = _context2.sent;\n                resolve(response);\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                reject(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 9]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Создает новый индекс.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @param {object} options\r\n   * @return {Promise}\r\n   */\n  createIndex: function createIndex(collection, query) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(query), 'object');\n                assert.strictEqual(_typeof(options), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context3.next = 7;\n                return db.collection(collection).createIndex(query, options);\n\n              case 7:\n                response = _context3.sent;\n                resolve(response);\n                _context3.next = 14;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](0);\n                reject(_context3.t0);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 11]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет агрегацию.\r\n   * @param {string} collection\r\n   * @param {Array} pipeline\r\n   * @param {object} options\r\n   * @return {Promise}\r\n   */\n  aggregate: function aggregate(collection, pipeline) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(Array.isArray(pipeline), true);\n                assert.strictEqual(_typeof(options), 'object'); // console.log(pipeline);\n\n                assert.strictEqual(client.isConnected(), true); // https://docs.mongodb.com/manual/reference/method/db.collection.aggregate/\n                // https://mongodb.github.io/node-mongodb-native/2.0/tutorials/aggregation/\n                // http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#aggregate\n                // https://docs.mongodb.com/v4.0/reference/operator/aggregation-pipeline/\n                // https://docs.mongodb.com/v4.0/reference/operator/aggregation/\n                // https://docs.mongodb.com/v4.0/reference/command/aggregate/\n                // https://docs.mongodb.com/manual/core/aggregation-pipeline-limits/#memory-restrictions\n                // Этапы конвейера имеют ограничение в 100 мегабайт оперативной памяти. Если этап превышает этот предел, MongoDB выдаст ошибку. Чтобы разрешить обработку больших наборов данных, используйте параметр allowDiskUse, чтобы разрешить этапам конвейера агрегации записывать данные во временные файлы.\n\n                _context4.next = 7;\n                return db.collection(collection).aggregate(pipeline, options).toArray();\n\n              case 7:\n                response = _context4.sent;\n                resolve(response);\n                _context4.next = 14;\n                break;\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](0);\n                reject(_context4.t0);\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 11]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет единичный поиск.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @return {Promise}\r\n   */\n  findOne: function findOne(collection, query) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(query), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context5.next = 6;\n                return db.collection(collection).findOne(query);\n\n              case 6:\n                response = _context5.sent;\n                resolve(response);\n                _context5.next = 13;\n                break;\n\n              case 10:\n                _context5.prev = 10;\n                _context5.t0 = _context5[\"catch\"](0);\n                reject(_context5.t0);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 10]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет множественный поиск.\r\n   * @param {string} collection\r\n   * @return {Promise}\r\n   */\n  getAll: function getAll(collection) {\n    return new Promise( /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(resolve, reject) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(client.isConnected(), true);\n                _context6.next = 5;\n                return db.collection(collection).find().toArray();\n\n              case 5:\n                response = _context6.sent;\n                resolve(response);\n                _context6.next = 12;\n                break;\n\n              case 9:\n                _context6.prev = 9;\n                _context6.t0 = _context6[\"catch\"](0);\n                reject(_context6.t0);\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 9]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  },\n\n  /**\r\n   * Выполняет единичную вставку.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @return {Promise}\r\n   */\n  insertOne: function insertOne(collection, query) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(query), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context7.next = 6;\n                return db.collection(collection).insertOne(query);\n\n              case 6:\n                response = _context7.sent;\n                resolve(response);\n                _context7.next = 13;\n                break;\n\n              case 10:\n                _context7.prev = 10;\n                _context7.t0 = _context7[\"catch\"](0);\n                reject(_context7.t0);\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 10]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет массовую вставку.\r\n   * @param {string} collection\r\n   * @param {Array} query\r\n   * @return {Promise}\r\n   */\n  insertMany: function insertMany(collection, query) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(query), 'object');\n                assert.strictEqual(Array.isArray(query), true);\n                assert.strictEqual(client.isConnected(), true); // https://docs.mongodb.com/v4.0/reference/method/db.collection.insertMany/\n\n                _context8.next = 7;\n                return db.collection(collection).insertMany(query);\n\n              case 7:\n                response = _context8.sent;\n                resolve(response);\n                _context8.next = 14;\n                break;\n\n              case 11:\n                _context8.prev = 11;\n                _context8.t0 = _context8[\"catch\"](0);\n                reject(_context8.t0);\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 11]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет единичное обновление.\r\n   * @param {string} collection\r\n   * @param {object} filter\r\n   * @param {object} update\r\n   * @param {object} options\r\n   * @return {Promise}\r\n   */\n  updateOne: function updateOne(collection, filter, update) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(filter), 'object');\n                assert.strictEqual(_typeof(update), 'object');\n                assert.strictEqual(_typeof(options), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context9.next = 8;\n                return db.collection(collection).updateOne(filter, update, options);\n\n              case 8:\n                response = _context9.sent;\n                resolve(response);\n                _context9.next = 15;\n                break;\n\n              case 12:\n                _context9.prev = 12;\n                _context9.t0 = _context9[\"catch\"](0);\n                reject(_context9.t0);\n\n              case 15:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[0, 12]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n  * Выполняет множественное обновление.\r\n  * @param {string} collection\r\n  * @param {object} filter\r\n  * @param {object} update\r\n  * @param {object} options\r\n  * @return {Promise}\r\n  */\n  updateMany: function updateMany(collection, filter, update) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(filter), 'object');\n                assert.strictEqual(_typeof(update), 'object');\n                assert.strictEqual(_typeof(options), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context10.next = 8;\n                return db.collection(collection).updateMany(filter, update, options);\n\n              case 8:\n                response = _context10.sent;\n                resolve(response);\n                _context10.next = 15;\n                break;\n\n              case 12:\n                _context10.prev = 12;\n                _context10.t0 = _context10[\"catch\"](0);\n                reject(_context10.t0);\n\n              case 15:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[0, 12]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет единичное удаление.\r\n   * @param {string} collection\r\n   * @param {object} filter\r\n   * @return {Promise}\r\n   */\n  deleteOne: function deleteOne(collection, filter) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(filter), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context11.next = 6;\n                return db.collection(collection).deleteOne(filter);\n\n              case 6:\n                response = _context11.sent;\n                resolve(response);\n                _context11.next = 13;\n                break;\n\n              case 10:\n                _context11.prev = 10;\n                _context11.t0 = _context11[\"catch\"](0);\n                reject(_context11.t0);\n\n              case 13:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[0, 10]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет массовое удаление.\r\n   * @param {string} collection\r\n   * @param {object} filter\r\n   * @return {Promise}\r\n   */\n  deleteMany: function deleteMany(collection, filter) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(filter), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context12.next = 6;\n                return db.collection(collection).deleteMany(filter);\n\n              case 6:\n                response = _context12.sent;\n                resolve(response);\n                _context12.next = 13;\n                break;\n\n              case 10:\n                _context12.prev = 10;\n                _context12.t0 = _context12[\"catch\"](0);\n                reject(_context12.t0);\n\n              case 13:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, null, [[0, 10]]);\n      })), 0);\n    });\n  },\n\n  /**\r\n   * Выполняет подсчет документов.\r\n   * @param {string} collection\r\n   * @param {object} query\r\n   * @return {Promise}\r\n   */\n  countDocuments: function countDocuments(collection, query) {\n    return new Promise(function (resolve, reject) {\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.prev = 0;\n                assert.strictEqual(_typeof(collection), 'string');\n                assert.strictEqual(_typeof(query), 'object');\n                assert.strictEqual(client.isConnected(), true);\n                _context13.next = 6;\n                return db.collection(collection).countDocuments(query);\n\n              case 6:\n                response = _context13.sent;\n                resolve(response);\n                _context13.next = 13;\n                break;\n\n              case 10:\n                _context13.prev = 10;\n                _context13.t0 = _context13[\"catch\"](0);\n                reject(_context13.t0);\n\n              case 13:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, null, [[0, 10]]);\n      })), 0);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "mongodb.js"
      ],
      "names": [
        "assert",
        "require",
        "mongodb",
        "EventEmitter",
        "config",
        "events",
        "tags",
        "client",
        "db",
        "on",
        "console",
        "log",
        "connection",
        "options",
        "host",
        "port",
        "source",
        "database",
        "username",
        "password",
        "MongoClient",
        "connect",
        "emit",
        "strictEqual",
        "isConnected",
        "error",
        "exception",
        "process",
        "exit",
        "module",
        "exports",
        "id",
        "value",
        "ObjectId",
        "isValid",
        "result",
        "createCollection",
        "Promise",
        "resolve",
        "reject",
        "setTimeout",
        "response",
        "createIndex",
        "collection",
        "query",
        "aggregate",
        "pipeline",
        "Array",
        "isArray",
        "toArray",
        "findOne",
        "getAll",
        "find",
        "insertOne",
        "insertMany",
        "updateOne",
        "filter",
        "update",
        "updateMany",
        "deleteOne",
        "deleteMany",
        "countDocuments"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "sourcesContent": [
        "const assert = require('assert');\r\nconst mongodb = require('mongodb');\r\nconst EventEmitter = require('events');\r\n\r\nconst config = require('../config.json').mongodb;\r\n\r\nconst events = new EventEmitter();\r\nconst tags = { client: 'MongoDB::client', db: 'MongoDB::db' };\r\n\r\nevents.on('created', () => console.log(`${tags.client} created`));\r\nevents.on('connected', () => console.log(`${tags.db} connected`));\r\n\r\nlet client;\r\nlet db;\r\n\r\n// eslint-disable-next-line func-names\r\n(async function () {\r\n    // eslint-disable-next-line no-undef\r\n    const { connection, options } = config;\r\n    const { host, port, source, database, username, password } = connection;\r\n\r\n    client = await mongodb.MongoClient.connect(`mongodb://${username}:${password}@${host}:${port}/?authSource=${source}`, options);\r\n\r\n    events.emit('created');\r\n\r\n    db = client.db(database);\r\n\r\n    assert.strictEqual(typeof client, 'object');\r\n    assert.strictEqual(typeof db, 'object');\r\n    assert.strictEqual(client.isConnected(), true);\r\n\r\n\tevents.emit('connected');\r\n\r\n    db.on('close', error => console.log(`${tags.db} close`, error));\r\n    db.on('error', error => console.log(`${tags.db} error`, error));\r\n    db.on('fullsetup', () => console.log(`${tags.db} fullsetup`));\r\n    db.on('parseError', error => console.log(`${tags.db} parseError`, error));\r\n\tdb.on('reconnect', () => console.log(`${tags.db} reconnect`));\r\n\tdb.on('timeout', error => console.log(`${tags.db} timeout`, error));\r\n}()).catch(exception => {\r\n    console.log(exception);\r\n    process.exit(1);\r\n});\r\n\r\nmodule.exports = {\r\n    events,\r\n\r\n    /**\r\n     * Преобразовывает строку в ObjectID.\r\n     * @param {string} value\r\n     * @return {ObjectId}\r\n     */\r\n\tid: value => {\r\n        assert.strictEqual(typeof value, 'string');\r\n        assert.strictEqual(mongodb.ObjectId.isValid(value), true);\r\n\r\n        const result = new mongodb.ObjectId(value);\r\n\r\n        assert.strictEqual(typeof result, 'object');\r\n\r\n        return result;\r\n    },\r\n\r\n    /**\r\n     * Создает новую коллекцию.\r\n     * @param {string} value\r\n     * @return {Promise}\r\n     */\r\n    createCollection: value => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof value, 'string');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.createCollection(value);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Создает новый индекс.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    createIndex: (collection, query, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).createIndex(query, options);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет агрегацию.\r\n     * @param {string} collection\r\n     * @param {Array} pipeline\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    aggregate: (collection, pipeline, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(Array.isArray(pipeline), true);\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                // console.log(pipeline);\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                // https://docs.mongodb.com/manual/reference/method/db.collection.aggregate/\r\n                // https://mongodb.github.io/node-mongodb-native/2.0/tutorials/aggregation/\r\n                // http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#aggregate\r\n                // https://docs.mongodb.com/v4.0/reference/operator/aggregation-pipeline/\r\n                // https://docs.mongodb.com/v4.0/reference/operator/aggregation/\r\n                // https://docs.mongodb.com/v4.0/reference/command/aggregate/\r\n\r\n                // https://docs.mongodb.com/manual/core/aggregation-pipeline-limits/#memory-restrictions\r\n\r\n                // Этапы конвейера имеют ограничение в 100 мегабайт оперативной памяти. Если этап превышает этот предел, MongoDB выдаст ошибку. Чтобы разрешить обработку больших наборов данных, используйте параметр allowDiskUse, чтобы разрешить этапам конвейера агрегации записывать данные во временные файлы.\r\n\r\n                const response = await db.collection(collection).aggregate(pipeline, options).toArray();\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичный поиск.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @return {Promise}\r\n     */\r\n    findOne: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).findOne(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет множественный поиск.\r\n     * @param {string} collection\r\n     * @return {Promise}\r\n     */\r\n    getAll: (collection) => new Promise(async (resolve, reject) => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).find().toArray();\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичную вставку.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @return {Promise}\r\n     */\r\n    insertOne: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).insertOne(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет массовую вставку.\r\n     * @param {string} collection\r\n     * @param {Array} query\r\n     * @return {Promise}\r\n     */\r\n    insertMany: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(Array.isArray(query), true);\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                // https://docs.mongodb.com/v4.0/reference/method/db.collection.insertMany/\r\n                const response = await db.collection(collection).insertMany(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичное обновление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @param {object} update\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    updateOne: (collection, filter, update, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n                assert.strictEqual(typeof update, 'object');\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).updateOne(filter, update, options);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n        /**\r\n     * Выполняет множественное обновление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @param {object} update\r\n     * @param {object} options\r\n     * @return {Promise}\r\n     */\r\n    updateMany: (collection, filter, update, options = {}) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n                assert.strictEqual(typeof update, 'object');\r\n                assert.strictEqual(typeof options, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).updateMany(filter, update, options);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет единичное удаление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @return {Promise}\r\n     */\r\n    deleteOne: (collection, filter) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).deleteOne(filter);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет массовое удаление.\r\n     * @param {string} collection\r\n     * @param {object} filter\r\n     * @return {Promise}\r\n     */\r\n    deleteMany: (collection, filter) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof filter, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).deleteMany(filter);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n\r\n    /**\r\n     * Выполняет подсчет документов.\r\n     * @param {string} collection\r\n     * @param {object} query\r\n     * @return {Promise}\r\n     */\r\n    countDocuments: (collection, query) => new Promise((resolve, reject) => {\r\n        setTimeout(async () => {\r\n            try {\r\n                assert.strictEqual(typeof collection, 'string');\r\n                assert.strictEqual(typeof query, 'object');\r\n\r\n                assert.strictEqual(client.isConnected(), true);\r\n\r\n                const response = await db.collection(collection).countDocuments(query);\r\n\r\n                resolve(response);\r\n            } catch (exception) {\r\n                reject(exception);\r\n            }\r\n        }, 0);\r\n    }),\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585418714279
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"filename\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\\\\systems\\\\nodemailer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\AHDRYWA\\\\Desktop\\\\vegetables-master\\\\backend\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\nodemailer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\nodemailer.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\nodemailer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
        "sourceFileName": "nodemailer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar nodeMailer = require('nodemailer');\n\nmodule.exports = nodeMailer.createTransport({\n  host: 'smtp-pulse.com',\n  port: 2525,\n  // secure: true,\n  auth: {\n    user: 'timchenkoandrey19@gmail.com',\n    pass: 'KLdaaXEJKcN'\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVtYWlsZXIuanMiXSwibmFtZXMiOlsibm9kZU1haWxlciIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlVHJhbnNwb3J0IiwiaG9zdCIsInBvcnQiLCJhdXRoIiwidXNlciIsInBhc3MiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUExQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxVQUFVLENBQUNJLGVBQVgsQ0FBMkI7QUFDcENDLEVBQUFBLElBQUksRUFBRSxnQkFEOEI7QUFFcENDLEVBQUFBLElBQUksRUFBRSxJQUY4QjtBQUdwQztBQUNBQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsSUFBSSxFQUFFLDZCQURKO0FBRUZDLElBQUFBLElBQUksRUFBRTtBQUZKO0FBSjhCLENBQTNCLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQUhEUllXQVxcRGVza3RvcFxcdmVnZXRhYmxlcy1tYXN0ZXJcXGJhY2tlbmRcXHN5c3RlbXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG5vZGVNYWlsZXIgPSByZXF1aXJlKCdub2RlbWFpbGVyJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG5vZGVNYWlsZXIuY3JlYXRlVHJhbnNwb3J0KHtcclxuICAgICAgICBob3N0OiAnc210cC1wdWxzZS5jb20nLFxyXG4gICAgICAgIHBvcnQ6IDI1MjUsXHJcbiAgICAgICAgLy8gc2VjdXJlOiB0cnVlLFxyXG4gICAgICAgIGF1dGg6IHtcclxuICAgICAgICAgICAgdXNlcjogJ3RpbWNoZW5rb2FuZHJleTE5QGdtYWlsLmNvbScsXHJcbiAgICAgICAgICAgIHBhc3M6ICdLTGRhYVhFSktjTicsXHJcbiAgICAgICAgfSxcclxuICAgIH0pO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "nodemailer.js"
      ],
      "names": [
        "nodeMailer",
        "require",
        "module",
        "exports",
        "createTransport",
        "host",
        "port",
        "auth",
        "user",
        "pass"
      ],
      "mappings": ";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiBH,UAAU,CAACI,eAAX,CAA2B;AACpCC,EAAAA,IAAI,EAAE,gBAD8B;AAEpCC,EAAAA,IAAI,EAAE,IAF8B;AAGpC;AACAC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,6BADJ;AAEFC,IAAAA,IAAI,EAAE;AAFJ;AAJ8B,CAA3B,CAAjB",
      "sourceRoot": "C:\\Users\\AHDRYWA\\Desktop\\vegetables-master\\backend\\systems\\",
      "sourcesContent": [
        "const nodeMailer = require('nodemailer');\r\n\r\nmodule.exports = nodeMailer.createTransport({\r\n        host: 'smtp-pulse.com',\r\n        port: 2525,\r\n        // secure: true,\r\n        auth: {\r\n            user: 'timchenkoandrey19@gmail.com',\r\n            pass: 'KLdaaXEJKcN',\r\n        },\r\n    });\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585418713076
  }
}